<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1.0"/><meta name="description" content="The CDN for everything on npm"/><link rel="icon" type="image/jpeg" href="/favicon.jpg"/><link rel="stylesheet" href="https://app.unpkg.com/_assets/styles-D6XP7YEC.css"/><link rel="stylesheet" href="https://app.unpkg.com/_assets/code-light-B2LHUSJR.css"/><script type="importmap">{"imports":{"preact":"https://unpkg.com/preact@10.25.4/dist/preact.module.js","preact/hooks":"https://unpkg.com/preact@10.25.4/hooks/dist/hooks.module.js","preact/jsx-runtime":"https://unpkg.com/preact@10.25.4/jsx-runtime/dist/jsxRuntime.module.js"}}</script><script type="module" src="https://app.unpkg.com/_assets/scripts-5LWG6LQM.js" defer></script><title>UNPKG</title><script async src="https://www.googletagmanager.com/gtag/js?id=UA-140352188-1"></script><script>window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-140352188-1');</script></head><body><header class="border-b border-slate-300 bg-slate-100 text-slate-950"><div class="p-4 mx-auto flex justify-between items-center lg:max-w-screen-xl"><h1 class="text-2xl font-bold inline-block"><a href="https://unpkg.com">UNPKG</a></h1><span class="inline-block h-full"><a href="https://github.com/unpkg"><svg aria-hidden="true" fill="currentColor" viewBox="0 0 24 24" class="w-6 h-6"><path fill-rule="evenodd" d="M12.006 2a9.847 9.847 0 0 0-6.484 2.44 10.32 10.32 0 0 0-3.393 6.17 10.48 10.48 0 0 0 1.317 6.955 10.045 10.045 0 0 0 5.4 4.418c.504.095.683-.223.683-.494 0-.245-.01-1.052-.014-1.908-2.78.62-3.366-1.21-3.366-1.21a2.711 2.711 0 0 0-1.11-1.5c-.907-.637.07-.621.07-.621.317.044.62.163.885.346.266.183.487.426.647.71.135.253.318.476.538.655a2.079 2.079 0 0 0 2.37.196c.045-.52.27-1.006.635-1.37-2.219-.259-4.554-1.138-4.554-5.07a4.022 4.022 0 0 1 1.031-2.75 3.77 3.77 0 0 1 .096-2.713s.839-.275 2.749 1.05a9.26 9.26 0 0 1 5.004 0c1.906-1.325 2.74-1.05 2.74-1.05.37.858.406 1.828.101 2.713a4.017 4.017 0 0 1 1.029 2.75c0 3.939-2.339 4.805-4.564 5.058a2.471 2.471 0 0 1 .679 1.897c0 1.372-.012 2.477-.012 2.814 0 .272.18.592.687.492a10.05 10.05 0 0 0 5.388-4.421 10.473 10.473 0 0 0 1.313-6.948 10.32 10.32 0 0 0-3.39-6.165A9.847 9.847 0 0 0 12.007 2Z" clip-rule="evenodd"></path></svg></a></span></div></header><main class="px-4 pb-24 mx-auto lg:max-w-screen-xl lg:pb-44"><header class="pt-6 pb-4 lg:pt-16"><div class="mb-6 flex justify-between items-center"><h1 class="text-black text-3xl leading-tight font-semibold">pdf-lib</h1><div class="text-right w-48"><span>Version: </span><span data-hydrate="{&quot;key&quot;:&quot;VersionSelector&quot;,&quot;props&quot;:{&quot;availableTags&quot;:{&quot;latest&quot;:&quot;1.17.1&quot;,&quot;beta&quot;:&quot;1.0.0-beta.3&quot;,&quot;next&quot;:&quot;1.11.2-rc1&quot;},&quot;availableVersions&quot;:[&quot;1.17.1&quot;,&quot;1.17.0&quot;,&quot;1.16.0&quot;,&quot;1.15.0&quot;,&quot;1.14.1&quot;,&quot;1.14.0&quot;,&quot;1.13.0&quot;,&quot;1.12.0&quot;,&quot;1.11.2&quot;,&quot;1.11.2-rc1&quot;,&quot;1.11.1&quot;,&quot;1.11.0&quot;,&quot;1.11.0-rc1&quot;,&quot;1.10.0&quot;,&quot;1.9.0&quot;,&quot;1.8.0&quot;,&quot;1.7.0&quot;,&quot;1.6.1&quot;,&quot;1.6.1-rc1&quot;,&quot;1.6.0&quot;,&quot;1.5.1-rc2&quot;,&quot;1.5.1-rc1&quot;,&quot;1.5.0&quot;,&quot;1.4.1&quot;,&quot;1.4.0&quot;,&quot;1.4.0-rc1&quot;,&quot;1.3.2&quot;,&quot;1.3.1&quot;,&quot;1.3.0&quot;,&quot;1.2.1&quot;,&quot;1.2.0&quot;,&quot;1.1.1&quot;,&quot;1.0.1&quot;,&quot;1.0.0&quot;,&quot;1.0.0-beta.3&quot;,&quot;1.0.0-beta.2&quot;,&quot;1.0.0-beta.1&quot;,&quot;0.6.4&quot;,&quot;0.6.4-rc2&quot;,&quot;0.6.4-rc1&quot;,&quot;0.6.3&quot;,&quot;0.6.3-rc1&quot;,&quot;0.6.2&quot;,&quot;0.6.2-rc4&quot;,&quot;0.6.2-rc3&quot;,&quot;0.6.2-rc2&quot;,&quot;0.6.2-rc1&quot;,&quot;0.6.1&quot;,&quot;0.6.1-rc4&quot;,&quot;0.6.1-rc3&quot;,&quot;0.6.1-rc2&quot;,&quot;0.6.1-rc1&quot;,&quot;0.6.0&quot;,&quot;0.6.0-rc2&quot;,&quot;0.6.0-rc1&quot;,&quot;0.5.1&quot;,&quot;0.5.1-rc3&quot;,&quot;0.5.1-rc2&quot;,&quot;0.5.1-rc1&quot;,&quot;0.5.0&quot;,&quot;0.5.0-rc1&quot;,&quot;0.4.1&quot;,&quot;0.4.1-rc1&quot;,&quot;0.4.0&quot;,&quot;0.4.0-rc1&quot;,&quot;0.3.1-rc3&quot;,&quot;0.3.1-rc2&quot;,&quot;0.3.1-rc1&quot;,&quot;0.3.0&quot;,&quot;0.3.0-rc3&quot;,&quot;0.3.0-rc2&quot;,&quot;0.3.0-rc1&quot;,&quot;0.2.1&quot;,&quot;0.2.1-rc2&quot;,&quot;0.2.1-rc1&quot;,&quot;0.2.0&quot;,&quot;0.1.1-rc2&quot;,&quot;0.1.1-rc&quot;,&quot;0.1.0&quot;,&quot;0.0.1-rc5&quot;,&quot;0.0.1-rc3&quot;,&quot;0.0.1-rc2&quot;,&quot;0.0.1-rc&quot;,&quot;0.0.0&quot;],&quot;currentVersion&quot;:&quot;1.17.1&quot;,&quot;pathnameFormat&quot;:&quot;/pdf-lib@%s/files/dist/pdf-lib.js.map&quot;,&quot;class&quot;:&quot;w-28 p-1 border border-slate-300 bg-slate-100 text-sm&quot;}}"><select name="version" class="w-28 p-1 border border-slate-300 bg-slate-100 text-sm"><optgroup label="Tags"><option value="1.0.0-beta.3">beta (1.0.0-beta.3)</option><option selected value="1.17.1">latest (1.17.1)</option><option value="1.11.2-rc1">next (1.11.2-rc1)</option></optgroup><optgroup label="Versions"><option selected value="1.17.1">1.17.1</option><option value="1.17.0">1.17.0</option><option value="1.16.0">1.16.0</option><option value="1.15.0">1.15.0</option><option value="1.14.1">1.14.1</option><option value="1.14.0">1.14.0</option><option value="1.13.0">1.13.0</option><option value="1.12.0">1.12.0</option><option value="1.11.2">1.11.2</option><option value="1.11.2-rc1">1.11.2-rc1</option><option value="1.11.1">1.11.1</option><option value="1.11.0">1.11.0</option><option value="1.11.0-rc1">1.11.0-rc1</option><option value="1.10.0">1.10.0</option><option value="1.9.0">1.9.0</option><option value="1.8.0">1.8.0</option><option value="1.7.0">1.7.0</option><option value="1.6.1">1.6.1</option><option value="1.6.1-rc1">1.6.1-rc1</option><option value="1.6.0">1.6.0</option><option value="1.5.1-rc2">1.5.1-rc2</option><option value="1.5.1-rc1">1.5.1-rc1</option><option value="1.5.0">1.5.0</option><option value="1.4.1">1.4.1</option><option value="1.4.0">1.4.0</option><option value="1.4.0-rc1">1.4.0-rc1</option><option value="1.3.2">1.3.2</option><option value="1.3.1">1.3.1</option><option value="1.3.0">1.3.0</option><option value="1.2.1">1.2.1</option><option value="1.2.0">1.2.0</option><option value="1.1.1">1.1.1</option><option value="1.0.1">1.0.1</option><option value="1.0.0">1.0.0</option><option value="1.0.0-beta.3">1.0.0-beta.3</option><option value="1.0.0-beta.2">1.0.0-beta.2</option><option value="1.0.0-beta.1">1.0.0-beta.1</option><option value="0.6.4">0.6.4</option><option value="0.6.4-rc2">0.6.4-rc2</option><option value="0.6.4-rc1">0.6.4-rc1</option><option value="0.6.3">0.6.3</option><option value="0.6.3-rc1">0.6.3-rc1</option><option value="0.6.2">0.6.2</option><option value="0.6.2-rc4">0.6.2-rc4</option><option value="0.6.2-rc3">0.6.2-rc3</option><option value="0.6.2-rc2">0.6.2-rc2</option><option value="0.6.2-rc1">0.6.2-rc1</option><option value="0.6.1">0.6.1</option><option value="0.6.1-rc4">0.6.1-rc4</option><option value="0.6.1-rc3">0.6.1-rc3</option><option value="0.6.1-rc2">0.6.1-rc2</option><option value="0.6.1-rc1">0.6.1-rc1</option><option value="0.6.0">0.6.0</option><option value="0.6.0-rc2">0.6.0-rc2</option><option value="0.6.0-rc1">0.6.0-rc1</option><option value="0.5.1">0.5.1</option><option value="0.5.1-rc3">0.5.1-rc3</option><option value="0.5.1-rc2">0.5.1-rc2</option><option value="0.5.1-rc1">0.5.1-rc1</option><option value="0.5.0">0.5.0</option><option value="0.5.0-rc1">0.5.0-rc1</option><option value="0.4.1">0.4.1</option><option value="0.4.1-rc1">0.4.1-rc1</option><option value="0.4.0">0.4.0</option><option value="0.4.0-rc1">0.4.0-rc1</option><option value="0.3.1-rc3">0.3.1-rc3</option><option value="0.3.1-rc2">0.3.1-rc2</option><option value="0.3.1-rc1">0.3.1-rc1</option><option value="0.3.0">0.3.0</option><option value="0.3.0-rc3">0.3.0-rc3</option><option value="0.3.0-rc2">0.3.0-rc2</option><option value="0.3.0-rc1">0.3.0-rc1</option><option value="0.2.1">0.2.1</option><option value="0.2.1-rc2">0.2.1-rc2</option><option value="0.2.1-rc1">0.2.1-rc1</option><option value="0.2.0">0.2.0</option><option value="0.1.1-rc2">0.1.1-rc2</option><option value="0.1.1-rc">0.1.1-rc</option><option value="0.1.0">0.1.0</option><option value="0.0.1-rc5">0.0.1-rc5</option><option value="0.0.1-rc3">0.0.1-rc3</option><option value="0.0.1-rc2">0.0.1-rc2</option><option value="0.0.1-rc">0.0.1-rc</option><option value="0.0.0">0.0.0</option></optgroup></select></span></div></div><div class="mt-2"><p class="mb-3 leading-tight"><span>Create and modify PDF files with JavaScript</span></p><div class="lg:hidden"><p class="mt-1 text-sm leading-4"><a href="https://pdf-lib.js.org/" title="Visit the pdf-lib website" class="inline-flex items-center hover:text-slate-950 hover:underline"><svg aria-hidden="true" fill="none" viewBox="0 0 24 24" class="w-6 h-6"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.213 9.787a3.391 3.391 0 0 0-4.795 0l-3.425 3.426a3.39 3.39 0 0 0 4.795 4.794l.321-.304m-.321-4.49a3.39 3.39 0 0 0 4.795 0l3.424-3.426a3.39 3.39 0 0 0-4.794-4.795l-1.028.961"></path></svg><span class="ml-1">pdf-lib.js.org</span></a></p><p class="mt-1 text-sm leading-4"><a href="https://github.com/Hopding/pdf-lib" title="View the pdf-lib repository on GitHub" class="inline-flex items-center hover:text-slate-950 hover:underline"><svg aria-hidden="true" fill="currentColor" viewBox="0 0 24 24" class="w-6 h-6"><path fill-rule="evenodd" d="M12.006 2a9.847 9.847 0 0 0-6.484 2.44 10.32 10.32 0 0 0-3.393 6.17 10.48 10.48 0 0 0 1.317 6.955 10.045 10.045 0 0 0 5.4 4.418c.504.095.683-.223.683-.494 0-.245-.01-1.052-.014-1.908-2.78.62-3.366-1.21-3.366-1.21a2.711 2.711 0 0 0-1.11-1.5c-.907-.637.07-.621.07-.621.317.044.62.163.885.346.266.183.487.426.647.71.135.253.318.476.538.655a2.079 2.079 0 0 0 2.37.196c.045-.52.27-1.006.635-1.37-2.219-.259-4.554-1.138-4.554-5.07a4.022 4.022 0 0 1 1.031-2.75 3.77 3.77 0 0 1 .096-2.713s.839-.275 2.749 1.05a9.26 9.26 0 0 1 5.004 0c1.906-1.325 2.74-1.05 2.74-1.05.37.858.406 1.828.101 2.713a4.017 4.017 0 0 1 1.029 2.75c0 3.939-2.339 4.805-4.564 5.058a2.471 2.471 0 0 1 .679 1.897c0 1.372-.012 2.477-.012 2.814 0 .272.18.592.687.492a10.05 10.05 0 0 0 5.388-4.421 10.473 10.473 0 0 0 1.313-6.948 10.32 10.32 0 0 0-3.39-6.165A9.847 9.847 0 0 0 12.007 2Z" clip-rule="evenodd"></path></svg><span class="ml-1">Hopding/pdf-lib</span></a></p></div></div></header><nav class="py-2"><span><a href="https://app.unpkg.com/pdf-lib@1.17.1" class="text-blue-600 hover:underline">pdf-lib</a></span><span> / </span><span><a href="https://app.unpkg.com/pdf-lib@1.17.1/files/dist" class="text-blue-600 hover:underline">dist</a></span><span> / </span><span>pdf-lib.js.map</span></nav><div class="p-3 border border-slate-300 bg-slate-100 text-sm flex justify-between select-none"><div class="w-64"><span><span>1 lines </span><span>• </span></span><span>2.73 MB</span></div><div class="hidden flex-grow sm:block text-center">Source Map (JSON)</div><div class="w-64 hidden sm:block text-right"><a href="https://unpkg.com/pdf-lib@1.17.1/dist/pdf-lib.js.map" class="py-1 px-2 border border-slate-300 bg-slate-100 hover:bg-slate-200 rounded-sm">View Raw</a></div></div><div data-hydrate="{&quot;key&quot;:&quot;CodeViewer&quot;,&quot;props&quot;:{&quot;html&quot;:&quot;{&amp;quot;version&amp;quot;:3,&amp;quot;file&amp;quot;:&amp;quot;pdf-lib.js&amp;quot;,&amp;quot;sources&amp;quot;:[&amp;quot;../node_modules/tslib/tslib.es6.js&amp;quot;,&amp;quot;../es/utils/base64.js&amp;quot;,&amp;quot;../es/utils/strings.js&amp;quot;,&amp;quot;../es/utils/arrays.js&amp;quot;,&amp;quot;../es/utils/async.js&amp;quot;,&amp;quot;../es/utils/unicode.js&amp;quot;,&amp;quot;../es/utils/numbers.js&amp;quot;,&amp;quot;../es/utils/errors.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/utils/common.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/trees.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/adler32.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/crc32.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/messages.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/deflate.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/utils/strings.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/zstream.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/deflate.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/inffast.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/inftrees.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/inflate.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/constants.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/gzheader.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/inflate.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/index.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/es/utils.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/es/Font.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/standard-fonts/es/Encoding.js&amp;quot;,&amp;quot;../es/utils/objects.js&amp;quot;,&amp;quot;../es/utils/validators.js&amp;quot;,&amp;quot;../es/utils/pdfDocEncoding.js&amp;quot;,&amp;quot;../es/utils/Cache.js&amp;quot;,&amp;quot;../es/core/errors.js&amp;quot;,&amp;quot;../es/core/syntax/CharCodes.js&amp;quot;,&amp;quot;../node_modules/pako/lib/utils/common.js&amp;quot;,&amp;quot;../node_modules/pako/lib/zlib/trees.js&amp;quot;,&amp;quot;../node_modules/pako/lib/zlib/adler32.js&amp;quot;,&amp;quot;../node_modules/pako/lib/zlib/crc32.js&amp;quot;,&amp;quot;../node_modules/pako/lib/zlib/messages.js&amp;quot;,&amp;quot;../node_modules/pako/lib/zlib/deflate.js&amp;quot;,&amp;quot;../node_modules/pako/lib/utils/strings.js&amp;quot;,&amp;quot;../node_modules/pako/lib/zlib/zstream.js&amp;quot;,&amp;quot;../node_modules/pako/lib/deflate.js&amp;quot;,&amp;quot;../node_modules/pako/lib/zlib/inffast.js&amp;quot;,&amp;quot;../node_modules/pako/lib/zlib/inftrees.js&amp;quot;,&amp;quot;../node_modules/pako/lib/zlib/inflate.js&amp;quot;,&amp;quot;../node_modules/pako/lib/zlib/constants.js&amp;quot;,&amp;quot;../node_modules/pako/lib/zlib/gzheader.js&amp;quot;,&amp;quot;../node_modules/pako/lib/inflate.js&amp;quot;,&amp;quot;../node_modules/pako/index.js&amp;quot;,&amp;quot;../es/core/document/PDFHeader.js&amp;quot;,&amp;quot;../es/core/objects/PDFObject.js&amp;quot;,&amp;quot;../es/core/objects/PDFNumber.js&amp;quot;,&amp;quot;../es/core/objects/PDFArray.js&amp;quot;,&amp;quot;../es/core/objects/PDFBool.js&amp;quot;,&amp;quot;../es/core/syntax/Delimiters.js&amp;quot;,&amp;quot;../es/core/syntax/Whitespace.js&amp;quot;,&amp;quot;../es/core/syntax/Irregular.js&amp;quot;,&amp;quot;../es/core/objects/PDFName.js&amp;quot;,&amp;quot;../es/core/objects/PDFNull.js&amp;quot;,&amp;quot;../es/core/objects/PDFDict.js&amp;quot;,&amp;quot;../es/core/objects/PDFStream.js&amp;quot;,&amp;quot;../es/core/objects/PDFRawStream.js&amp;quot;,&amp;quot;../es/core/objects/PDFRef.js&amp;quot;,&amp;quot;../es/core/operators/PDFOperator.js&amp;quot;,&amp;quot;../es/core/operators/PDFOperatorNames.js&amp;quot;,&amp;quot;../es/core/structures/PDFFlateStream.js&amp;quot;,&amp;quot;../es/core/structures/PDFContentStream.js&amp;quot;,&amp;quot;../es/utils/rng.js&amp;quot;,&amp;quot;../es/core/PDFContext.js&amp;quot;,&amp;quot;../es/core/structures/PDFPageLeaf.js&amp;quot;,&amp;quot;../es/core/PDFObjectCopier.js&amp;quot;,&amp;quot;../es/core/document/PDFCrossRefSection.js&amp;quot;,&amp;quot;../es/core/document/PDFTrailer.js&amp;quot;,&amp;quot;../es/core/document/PDFTrailerDict.js&amp;quot;,&amp;quot;../es/core/structures/PDFObjectStream.js&amp;quot;,&amp;quot;../es/core/writers/PDFWriter.js&amp;quot;,&amp;quot;../es/core/objects/PDFInvalidObject.js&amp;quot;,&amp;quot;../es/core/structures/PDFCrossRefStream.js&amp;quot;,&amp;quot;../es/core/writers/PDFStreamWriter.js&amp;quot;,&amp;quot;../es/core/objects/PDFHexString.js&amp;quot;,&amp;quot;../es/core/embedders/StandardFontEmbedder.js&amp;quot;,&amp;quot;../es/core/embedders/CMap.js&amp;quot;,&amp;quot;../es/core/embedders/FontFlags.js&amp;quot;,&amp;quot;../es/core/objects/PDFString.js&amp;quot;,&amp;quot;../es/core/embedders/CustomFontEmbedder.js&amp;quot;,&amp;quot;../es/core/embedders/CustomFontSubsetEmbedder.js&amp;quot;,&amp;quot;../es/core/embedders/FileEmbedder.js&amp;quot;,&amp;quot;../es/core/embedders/JpegEmbedder.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/utils/common.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/trees.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/adler32.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/crc32.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/messages.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/deflate.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/utils/strings.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/zstream.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/deflate.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/inffast.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/inftrees.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/inflate.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/constants.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/gzheader.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/inflate.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/node_modules/pako/index.js&amp;quot;,&amp;quot;../node_modules/@pdf-lib/upng/UPNG.js&amp;quot;,&amp;quot;../es/utils/png.js&amp;quot;,&amp;quot;../es/core/embedders/PngEmbedder.js&amp;quot;,&amp;quot;../es/core/streams/Stream.js&amp;quot;,&amp;quot;../es/core/streams/DecodeStream.js&amp;quot;,&amp;quot;../es/core/streams/Ascii85Stream.js&amp;quot;,&amp;quot;../es/core/streams/AsciiHexStream.js&amp;quot;,&amp;quot;../es/core/streams/FlateStream.js&amp;quot;,&amp;quot;../es/core/streams/LZWStream.js&amp;quot;,&amp;quot;../es/core/streams/RunLengthStream.js&amp;quot;,&amp;quot;../es/core/streams/decode.js&amp;quot;,&amp;quot;../es/core/embedders/PDFPageEmbedder.js&amp;quot;,&amp;quot;../es/core/interactive/ViewerPreferences.js&amp;quot;,&amp;quot;../es/core/acroform/PDFAcroField.js&amp;quot;,&amp;quot;../es/core/annotation/BorderStyle.js&amp;quot;,&amp;quot;../es/core/annotation/PDFAnnotation.js&amp;quot;,&amp;quot;../es/core/annotation/AppearanceCharacteristics.js&amp;quot;,&amp;quot;../es/core/annotation/PDFWidgetAnnotation.js&amp;quot;,&amp;quot;../es/core/acroform/PDFAcroTerminal.js&amp;quot;,&amp;quot;../es/core/acroform/PDFAcroButton.js&amp;quot;,&amp;quot;../es/core/acroform/PDFAcroCheckBox.js&amp;quot;,&amp;quot;../es/core/acroform/flags.js&amp;quot;,&amp;quot;../es/core/acroform/PDFAcroChoice.js&amp;quot;,&amp;quot;../es/core/acroform/PDFAcroComboBox.js&amp;quot;,&amp;quot;../es/core/acroform/PDFAcroNonTerminal.js&amp;quot;,&amp;quot;../es/core/acroform/PDFAcroSignature.js&amp;quot;,&amp;quot;../es/core/acroform/PDFAcroText.js&amp;quot;,&amp;quot;../es/core/acroform/PDFAcroPushButton.js&amp;quot;,&amp;quot;../es/core/acroform/PDFAcroRadioButton.js&amp;quot;,&amp;quot;../es/core/acroform/PDFAcroListBox.js&amp;quot;,&amp;quot;../es/core/acroform/utils.js&amp;quot;,&amp;quot;../es/core/acroform/PDFAcroForm.js&amp;quot;,&amp;quot;../es/core/structures/PDFCatalog.js&amp;quot;,&amp;quot;../es/core/structures/PDFPageTree.js&amp;quot;,&amp;quot;../es/core/syntax/Numeric.js&amp;quot;,&amp;quot;../es/core/parser/BaseParser.js&amp;quot;,&amp;quot;../es/core/parser/ByteStream.js&amp;quot;,&amp;quot;../es/core/syntax/Keywords.js&amp;quot;,&amp;quot;../es/core/parser/PDFObjectParser.js&amp;quot;,&amp;quot;../es/core/parser/PDFObjectStreamParser.js&amp;quot;,&amp;quot;../es/core/parser/PDFXRefStreamParser.js&amp;quot;,&amp;quot;../es/core/parser/PDFParser.js&amp;quot;,&amp;quot;../es/core/annotation/flags.js&amp;quot;,&amp;quot;../es/api/objects.js&amp;quot;,&amp;quot;../es/api/rotations.js&amp;quot;,&amp;quot;../es/api/operators.js&amp;quot;,&amp;quot;../es/api/colors.js&amp;quot;,&amp;quot;../es/api/svgPath.js&amp;quot;,&amp;quot;../es/api/operations.js&amp;quot;,&amp;quot;../es/api/errors.js&amp;quot;,&amp;quot;../es/api/text/alignment.js&amp;quot;,&amp;quot;../es/api/text/layout.js&amp;quot;,&amp;quot;../es/api/form/appearances.js&amp;quot;,&amp;quot;../es/api/PDFEmbeddedPage.js&amp;quot;,&amp;quot;../es/api/PDFFont.js&amp;quot;,&amp;quot;../es/api/PDFImage.js&amp;quot;,&amp;quot;../es/api/image/alignment.js&amp;quot;,&amp;quot;../es/api/form/PDFField.js&amp;quot;,&amp;quot;../es/api/form/PDFCheckBox.js&amp;quot;,&amp;quot;../es/api/form/PDFDropdown.js&amp;quot;,&amp;quot;../es/api/form/PDFOptionList.js&amp;quot;,&amp;quot;../es/api/form/PDFRadioGroup.js&amp;quot;,&amp;quot;../es/api/form/PDFSignature.js&amp;quot;,&amp;quot;../es/api/form/PDFTextField.js&amp;quot;,&amp;quot;../es/api/StandardFonts.js&amp;quot;,&amp;quot;../es/api/form/PDFForm.js&amp;quot;,&amp;quot;../es/api/sizes.js&amp;quot;,&amp;quot;../es/api/PDFDocumentOptions.js&amp;quot;,&amp;quot;../es/api/PDFEmbeddedFile.js&amp;quot;,&amp;quot;../es/api/PDFJavaScript.js&amp;quot;,&amp;quot;../es/core/embedders/JavaScriptEmbedder.js&amp;quot;,&amp;quot;../es/api/PDFDocument.js&amp;quot;,&amp;quot;../es/api/PDFPageOptions.js&amp;quot;,&amp;quot;../es/api/PDFPage.js&amp;quot;,&amp;quot;../es/api/form/PDFButton.js&amp;quot;],&amp;quot;sourcesContent&amp;quot;:[&amp;quot;/*! *****************************************************************************\\r\\nCopyright (c) Microsoft Corporation. All rights reserved.\\r\\nLicensed under the Apache License, Version 2.0 (the \\&amp;quot;License\\&amp;quot;); you may not use\\r\\nthis file except in compliance with the License. You may obtain a copy of the\\r\\nLicense at http://www.apache.org/licenses/LICENSE-2.0\\r\\n\\r\\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\r\\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\\r\\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\\r\\nMERCHANTABLITY OR NON-INFRINGEMENT.\\r\\n\\r\\nSee the Apache Version 2.0 License for specific language governing permissions\\r\\nand limitations under the License.\\r\\n***************************************************************************** */\\r\\n/* global Reflect, Promise */\\r\\n\\r\\nvar extendStatics = function(d, b) {\\r\\n    extendStatics = Object.setPrototypeOf ||\\r\\n        ({ __proto__: [] } instanceof Array &amp;amp;&amp;amp; function (d, b) { d.__proto__ = b; }) ||\\r\\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\\r\\n    return extendStatics(d, b);\\r\\n};\\r\\n\\r\\nexport function __extends(d, b) {\\r\\n    extendStatics(d, b);\\r\\n    function __() { this.constructor = d; }\\r\\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\\r\\n}\\r\\n\\r\\nexport var __assign = function() {\\r\\n    __assign = Object.assign || function __assign(t) {\\r\\n        for (var s, i = 1, n = arguments.length; i &amp;lt; n; i++) {\\r\\n            s = arguments[i];\\r\\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\\r\\n        }\\r\\n        return t;\\r\\n    }\\r\\n    return __assign.apply(this, arguments);\\r\\n}\\r\\n\\r\\nexport function __rest(s, e) {\\r\\n    var t = {};\\r\\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) &amp;amp;&amp;amp; e.indexOf(p) &amp;lt; 0)\\r\\n        t[p] = s[p];\\r\\n    if (s != null &amp;amp;&amp;amp; typeof Object.getOwnPropertySymbols === \\&amp;quot;function\\&amp;quot;)\\r\\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i &amp;lt; p.length; i++) {\\r\\n            if (e.indexOf(p[i]) &amp;lt; 0 &amp;amp;&amp;amp; Object.prototype.propertyIsEnumerable.call(s, p[i]))\\r\\n                t[p[i]] = s[p[i]];\\r\\n        }\\r\\n    return t;\\r\\n}\\r\\n\\r\\nexport function __decorate(decorators, target, key, desc) {\\r\\n    var c = arguments.length, r = c &amp;lt; 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\\r\\n    if (typeof Reflect === \\&amp;quot;object\\&amp;quot; &amp;amp;&amp;amp; typeof Reflect.decorate === \\&amp;quot;function\\&amp;quot;) r = Reflect.decorate(decorators, target, key, desc);\\r\\n    else for (var i = decorators.length - 1; i &amp;gt;= 0; i--) if (d = decorators[i]) r = (c &amp;lt; 3 ? d(r) : c &amp;gt; 3 ? d(target, key, r) : d(target, key)) || r;\\r\\n    return c &amp;gt; 3 &amp;amp;&amp;amp; r &amp;amp;&amp;amp; Object.defineProperty(target, key, r), r;\\r\\n}\\r\\n\\r\\nexport function __param(paramIndex, decorator) {\\r\\n    return function (target, key) { decorator(target, key, paramIndex); }\\r\\n}\\r\\n\\r\\nexport function __metadata(metadataKey, metadataValue) {\\r\\n    if (typeof Reflect === \\&amp;quot;object\\&amp;quot; &amp;amp;&amp;amp; typeof Reflect.metadata === \\&amp;quot;function\\&amp;quot;) return Reflect.metadata(metadataKey, metadataValue);\\r\\n}\\r\\n\\r\\nexport function __awaiter(thisArg, _arguments, P, generator) {\\r\\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\\r\\n    return new (P || (P = Promise))(function (resolve, reject) {\\r\\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\\r\\n        function rejected(value) { try { step(generator[\\&amp;quot;throw\\&amp;quot;](value)); } catch (e) { reject(e); } }\\r\\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\\r\\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\\r\\n    });\\r\\n}\\r\\n\\r\\nexport function __generator(thisArg, body) {\\r\\n    var _ = { label: 0, sent: function() { if (t[0] &amp;amp; 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\\r\\n    return g = { next: verb(0), \\&amp;quot;throw\\&amp;quot;: verb(1), \\&amp;quot;return\\&amp;quot;: verb(2) }, typeof Symbol === \\&amp;quot;function\\&amp;quot; &amp;amp;&amp;amp; (g[Symbol.iterator] = function() { return this; }), g;\\r\\n    function verb(n) { return function (v) { return step([n, v]); }; }\\r\\n    function step(op) {\\r\\n        if (f) throw new TypeError(\\&amp;quot;Generator is already executing.\\&amp;quot;);\\r\\n        while (_) try {\\r\\n            if (f = 1, y &amp;amp;&amp;amp; (t = op[0] &amp;amp; 2 ? y[\\&amp;quot;return\\&amp;quot;] : op[0] ? y[\\&amp;quot;throw\\&amp;quot;] || ((t = y[\\&amp;quot;return\\&amp;quot;]) &amp;amp;&amp;amp; t.call(y), 0) : y.next) &amp;amp;&amp;amp; !(t = t.call(y, op[1])).done) return t;\\r\\n            if (y = 0, t) op = [op[0] &amp;amp; 2, t.value];\\r\\n            switch (op[0]) {\\r\\n                case 0: case 1: t = op; break;\\r\\n                case 4: _.label++; return { value: op[1], done: false };\\r\\n                case 5: _.label++; y = op[1]; op = [0]; continue;\\r\\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\\r\\n                default:\\r\\n                    if (!(t = _.trys, t = t.length &amp;gt; 0 &amp;amp;&amp;amp; t[t.length - 1]) &amp;amp;&amp;amp; (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\\r\\n                    if (op[0] === 3 &amp;amp;&amp;amp; (!t || (op[1] &amp;gt; t[0] &amp;amp;&amp;amp; op[1] &amp;lt; t[3]))) { _.label = op[1]; break; }\\r\\n                    if (op[0] === 6 &amp;amp;&amp;amp; _.label &amp;lt; t[1]) { _.label = t[1]; t = op; break; }\\r\\n                    if (t &amp;amp;&amp;amp; _.label &amp;lt; t[2]) { _.label = t[2]; _.ops.push(op); break; }\\r\\n                    if (t[2]) _.ops.pop();\\r\\n                    _.trys.pop(); continue;\\r\\n            }\\r\\n            op = body.call(thisArg, _);\\r\\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\\r\\n        if (op[0] &amp;amp; 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\\r\\n    }\\r\\n}\\r\\n\\r\\nexport function __exportStar(m, exports) {\\r\\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\\r\\n}\\r\\n\\r\\nexport function __values(o) {\\r\\n    var s = typeof Symbol === \\&amp;quot;function\\&amp;quot; &amp;amp;&amp;amp; Symbol.iterator, m = s &amp;amp;&amp;amp; o[s], i = 0;\\r\\n    if (m) return m.call(o);\\r\\n    if (o &amp;amp;&amp;amp; typeof o.length === \\&amp;quot;number\\&amp;quot;) return {\\r\\n        next: function () {\\r\\n            if (o &amp;amp;&amp;amp; i &amp;gt;= o.length) o = void 0;\\r\\n            return { value: o &amp;amp;&amp;amp; o[i++], done: !o };\\r\\n        }\\r\\n    };\\r\\n    throw new TypeError(s ? \\&amp;quot;Object is not iterable.\\&amp;quot; : \\&amp;quot;Symbol.iterator is not defined.\\&amp;quot;);\\r\\n}\\r\\n\\r\\nexport function __read(o, n) {\\r\\n    var m = typeof Symbol === \\&amp;quot;function\\&amp;quot; &amp;amp;&amp;amp; o[Symbol.iterator];\\r\\n    if (!m) return o;\\r\\n    var i = m.call(o), r, ar = [], e;\\r\\n    try {\\r\\n        while ((n === void 0 || n-- &amp;gt; 0) &amp;amp;&amp;amp; !(r = i.next()).done) ar.push(r.value);\\r\\n    }\\r\\n    catch (error) { e = { error: error }; }\\r\\n    finally {\\r\\n        try {\\r\\n            if (r &amp;amp;&amp;amp; !r.done &amp;amp;&amp;amp; (m = i[\\&amp;quot;return\\&amp;quot;])) m.call(i);\\r\\n        }\\r\\n        finally { if (e) throw e.error; }\\r\\n    }\\r\\n    return ar;\\r\\n}\\r\\n\\r\\nexport function __spread() {\\r\\n    for (var ar = [], i = 0; i &amp;lt; arguments.length; i++)\\r\\n        ar = ar.concat(__read(arguments[i]));\\r\\n    return ar;\\r\\n}\\r\\n\\r\\nexport function __spreadArrays() {\\r\\n    for (var s = 0, i = 0, il = arguments.length; i &amp;lt; il; i++) s += arguments[i].length;\\r\\n    for (var r = Array(s), k = 0, i = 0; i &amp;lt; il; i++)\\r\\n        for (var a = arguments[i], j = 0, jl = a.length; j &amp;lt; jl; j++, k++)\\r\\n            r[k] = a[j];\\r\\n    return r;\\r\\n};\\r\\n\\r\\nexport function __await(v) {\\r\\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\\r\\n}\\r\\n\\r\\nexport function __asyncGenerator(thisArg, _arguments, generator) {\\r\\n    if (!Symbol.asyncIterator) throw new TypeError(\\&amp;quot;Symbol.asyncIterator is not defined.\\&amp;quot;);\\r\\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\\r\\n    return i = {}, verb(\\&amp;quot;next\\&amp;quot;), verb(\\&amp;quot;throw\\&amp;quot;), verb(\\&amp;quot;return\\&amp;quot;), i[Symbol.asyncIterator] = function () { return this; }, i;\\r\\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) &amp;gt; 1 || resume(n, v); }); }; }\\r\\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\\r\\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\\r\\n    function fulfill(value) { resume(\\&amp;quot;next\\&amp;quot;, value); }\\r\\n    function reject(value) { resume(\\&amp;quot;throw\\&amp;quot;, value); }\\r\\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\\r\\n}\\r\\n\\r\\nexport function __asyncDelegator(o) {\\r\\n    var i, p;\\r\\n    return i = {}, verb(\\&amp;quot;next\\&amp;quot;), verb(\\&amp;quot;throw\\&amp;quot;, function (e) { throw e; }), verb(\\&amp;quot;return\\&amp;quot;), i[Symbol.iterator] = function () { return this; }, i;\\r\\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \\&amp;quot;return\\&amp;quot; } : f ? f(v) : v; } : f; }\\r\\n}\\r\\n\\r\\nexport function __asyncValues(o) {\\r\\n    if (!Symbol.asyncIterator) throw new TypeError(\\&amp;quot;Symbol.asyncIterator is not defined.\\&amp;quot;);\\r\\n    var m = o[Symbol.asyncIterator], i;\\r\\n    return m ? m.call(o) : (o = typeof __values === \\&amp;quot;function\\&amp;quot; ? __values(o) : o[Symbol.iterator](), i = {}, verb(\\&amp;quot;next\\&amp;quot;), verb(\\&amp;quot;throw\\&amp;quot;), verb(\\&amp;quot;return\\&amp;quot;), i[Symbol.asyncIterator] = function () { return this; }, i);\\r\\n    function verb(n) { i[n] = o[n] &amp;amp;&amp;amp; function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\\r\\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\\r\\n}\\r\\n\\r\\nexport function __makeTemplateObject(cooked, raw) {\\r\\n    if (Object.defineProperty) { Object.defineProperty(cooked, \\&amp;quot;raw\\&amp;quot;, { value: raw }); } else { cooked.raw = raw; }\\r\\n    return cooked;\\r\\n};\\r\\n\\r\\nexport function __importStar(mod) {\\r\\n    if (mod &amp;amp;&amp;amp; mod.__esModule) return mod;\\r\\n    var result = {};\\r\\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\\r\\n    result.default = mod;\\r\\n    return result;\\r\\n}\\r\\n\\r\\nexport function __importDefault(mod) {\\r\\n    return (mod &amp;amp;&amp;amp; mod.__esModule) ? mod : { default: mod };\\r\\n}\\r\\n\\r\\nexport function __classPrivateFieldGet(receiver, privateMap) {\\r\\n    if (!privateMap.has(receiver)) {\\r\\n        throw new TypeError(\\&amp;quot;attempted to get private field on non-instance\\&amp;quot;);\\r\\n    }\\r\\n    return privateMap.get(receiver);\\r\\n}\\r\\n\\r\\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\\r\\n    if (!privateMap.has(receiver)) {\\r\\n        throw new TypeError(\\&amp;quot;attempted to set private field on non-instance\\&amp;quot;);\\r\\n    }\\r\\n    privateMap.set(receiver, value);\\r\\n    return value;\\r\\n}\\r\\n&amp;quot;,&amp;quot;/*\\n * The `chars`, `lookup`, `encode`, and `decode` members of this file are\\n * licensed under the following:\\n *\\n *     base64-arraybuffer\\n *     https://github.com/niklasvh/base64-arraybuffer\\n *\\n *     Copyright (c) 2012 Niklas von Hertzen\\n *     Licensed under the MIT license.\\n *\\n */\\nvar chars = &amp;apos;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&amp;apos;;\\n// Use a lookup table to find the index.\\nvar lookup = new Uint8Array(256);\\nfor (var i = 0; i &amp;lt; chars.length; i++) {\\n    lookup[chars.charCodeAt(i)] = i;\\n}\\nexport var encodeToBase64 = function (bytes) {\\n    var base64 = &amp;apos;&amp;apos;;\\n    var len = bytes.length;\\n    for (var i = 0; i &amp;lt; len; i += 3) {\\n        base64 += chars[bytes[i] &amp;gt;&amp;gt; 2];\\n        base64 += chars[((bytes[i] &amp;amp; 3) &amp;lt;&amp;lt; 4) | (bytes[i + 1] &amp;gt;&amp;gt; 4)];\\n        base64 += chars[((bytes[i + 1] &amp;amp; 15) &amp;lt;&amp;lt; 2) | (bytes[i + 2] &amp;gt;&amp;gt; 6)];\\n        base64 += chars[bytes[i + 2] &amp;amp; 63];\\n    }\\n    if (len % 3 === 2) {\\n        base64 = base64.substring(0, base64.length - 1) + &amp;apos;=&amp;apos;;\\n    }\\n    else if (len % 3 === 1) {\\n        base64 = base64.substring(0, base64.length - 2) + &amp;apos;==&amp;apos;;\\n    }\\n    return base64;\\n};\\nexport var decodeFromBase64 = function (base64) {\\n    var bufferLength = base64.length * 0.75;\\n    var len = base64.length;\\n    var i;\\n    var p = 0;\\n    var encoded1;\\n    var encoded2;\\n    var encoded3;\\n    var encoded4;\\n    if (base64[base64.length - 1] === &amp;apos;=&amp;apos;) {\\n        bufferLength--;\\n        if (base64[base64.length - 2] === &amp;apos;=&amp;apos;) {\\n            bufferLength--;\\n        }\\n    }\\n    var bytes = new Uint8Array(bufferLength);\\n    for (i = 0; i &amp;lt; len; i += 4) {\\n        encoded1 = lookup[base64.charCodeAt(i)];\\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\\n        bytes[p++] = (encoded1 &amp;lt;&amp;lt; 2) | (encoded2 &amp;gt;&amp;gt; 4);\\n        bytes[p++] = ((encoded2 &amp;amp; 15) &amp;lt;&amp;lt; 4) | (encoded3 &amp;gt;&amp;gt; 2);\\n        bytes[p++] = ((encoded3 &amp;amp; 3) &amp;lt;&amp;lt; 6) | (encoded4 &amp;amp; 63);\\n    }\\n    return bytes;\\n};\\n// This regex is designed to be as flexible as possible. It will parse certain\\n// invalid data URIs.\\nvar DATA_URI_PREFIX_REGEX = /^(data)?:?([\\\\w\\\\/\\\\+]+)?;?(charset=[\\\\w-]+|base64)?.*,/i;\\n/**\\n * If the `dataUri` input is a data URI, then the data URI prefix must not be\\n * longer than 100 characters, or this function will fail to decode it.\\n *\\n * @param dataUri a base64 data URI or plain base64 string\\n * @returns a Uint8Array containing the decoded input\\n */\\nexport var decodeFromBase64DataUri = function (dataUri) {\\n    var trimmedUri = dataUri.trim();\\n    var prefix = trimmedUri.substring(0, 100);\\n    var res = prefix.match(DATA_URI_PREFIX_REGEX);\\n    // Assume it&amp;apos;s not a data URI - just a plain base64 string\\n    if (!res)\\n        return decodeFromBase64(trimmedUri);\\n    // Remove the data URI prefix and parse the remainder as a base64 string\\n    var fullMatch = res[0];\\n    var data = trimmedUri.substring(fullMatch.length);\\n    return decodeFromBase64(data);\\n};\\n//# sourceMappingURL=base64.js.map&amp;quot;,&amp;quot;export var toCharCode = function (character) { return character.charCodeAt(0); };\\nexport var toCodePoint = function (character) { return character.codePointAt(0); };\\nexport var toHexStringOfMinLength = function (num, minLength) {\\n    return padStart(num.toString(16), minLength, &amp;apos;0&amp;apos;).toUpperCase();\\n};\\nexport var toHexString = function (num) { return toHexStringOfMinLength(num, 2); };\\nexport var charFromCode = function (code) { return String.fromCharCode(code); };\\nexport var charFromHexCode = function (hex) { return charFromCode(parseInt(hex, 16)); };\\nexport var padStart = function (value, length, padChar) {\\n    var padding = &amp;apos;&amp;apos;;\\n    for (var idx = 0, len = length - value.length; idx &amp;lt; len; idx++) {\\n        padding += padChar;\\n    }\\n    return padding + value;\\n};\\nexport var copyStringIntoBuffer = function (str, buffer, offset) {\\n    var length = str.length;\\n    for (var idx = 0; idx &amp;lt; length; idx++) {\\n        buffer[offset++] = str.charCodeAt(idx);\\n    }\\n    return length;\\n};\\nexport var addRandomSuffix = function (prefix, suffixLength) {\\n    if (suffixLength === void 0) { suffixLength = 4; }\\n    return prefix + \\&amp;quot;-\\&amp;quot; + Math.floor(Math.random() * Math.pow(10, suffixLength));\\n};\\nexport var escapeRegExp = function (str) {\\n    return str.replace(/[.*+?^${}()|[\\\\]\\\\\\\\]/g, &amp;apos;\\\\\\\\$&amp;amp;&amp;apos;);\\n};\\nexport var cleanText = function (text) {\\n    return text.replace(/\\\\t|\\\\u0085|\\\\u2028|\\\\u2029/g, &amp;apos;    &amp;apos;).replace(/[\\\\b\\\\v]/g, &amp;apos;&amp;apos;);\\n};\\nexport var escapedNewlineChars = [&amp;apos;\\\\\\\\n&amp;apos;, &amp;apos;\\\\\\\\f&amp;apos;, &amp;apos;\\\\\\\\r&amp;apos;, &amp;apos;\\\\\\\\u000B&amp;apos;];\\nexport var newlineChars = [&amp;apos;\\\\n&amp;apos;, &amp;apos;\\\\f&amp;apos;, &amp;apos;\\\\r&amp;apos;, &amp;apos;\\\\u000B&amp;apos;];\\nexport var isNewlineChar = function (text) { return /^[\\\\n\\\\f\\\\r\\\\u000B]$/.test(text); };\\nexport var lineSplit = function (text) { return text.split(/[\\\\n\\\\f\\\\r\\\\u000B]/); };\\nexport var mergeLines = function (text) {\\n    return text.replace(/[\\\\n\\\\f\\\\r\\\\u000B]/g, &amp;apos; &amp;apos;);\\n};\\n// JavaScript&amp;apos;s String.charAt() method doesn work on strings containing UTF-16\\n// characters (with high and low surrogate pairs), such as 💩 (poo emoji). This\\n// `charAtIndex()` function does.\\n//\\n// Credit: https://github.com/mathiasbynens/String.prototype.at/blob/master/at.js#L14-L48\\nexport var charAtIndex = function (text, index) {\\n    // Get the first code unit and code unit value\\n    var cuFirst = text.charCodeAt(index);\\n    var cuSecond;\\n    var nextIndex = index + 1;\\n    var length = 1;\\n    if (\\n    // Check if it&amp;apos;s the start of a surrogate pair.\\n    cuFirst &amp;gt;= 0xd800 &amp;amp;&amp;amp;\\n        cuFirst &amp;lt;= 0xdbff &amp;amp;&amp;amp; // high surrogate\\n        text.length &amp;gt; nextIndex // there is a next code unit\\n    ) {\\n        cuSecond = text.charCodeAt(nextIndex);\\n        if (cuSecond &amp;gt;= 0xdc00 &amp;amp;&amp;amp; cuSecond &amp;lt;= 0xdfff)\\n            length = 2; // low surrogate\\n    }\\n    return [text.slice(index, index + length), length];\\n};\\nexport var charSplit = function (text) {\\n    var chars = [];\\n    for (var idx = 0, len = text.length; idx &amp;lt; len;) {\\n        var _a = charAtIndex(text, idx), c = _a[0], cLen = _a[1];\\n        chars.push(c);\\n        idx += cLen;\\n    }\\n    return chars;\\n};\\nvar buildWordBreakRegex = function (wordBreaks) {\\n    var newlineCharUnion = escapedNewlineChars.join(&amp;apos;|&amp;apos;);\\n    var escapedRules = [&amp;apos;$&amp;apos;];\\n    for (var idx = 0, len = wordBreaks.length; idx &amp;lt; len; idx++) {\\n        var wordBreak = wordBreaks[idx];\\n        if (isNewlineChar(wordBreak)) {\\n            throw new TypeError(\\&amp;quot;`wordBreak` must not include \\&amp;quot; + newlineCharUnion);\\n        }\\n        escapedRules.push(wordBreak === &amp;apos;&amp;apos; ? &amp;apos;.&amp;apos; : escapeRegExp(wordBreak));\\n    }\\n    var breakRules = escapedRules.join(&amp;apos;|&amp;apos;);\\n    return new RegExp(\\&amp;quot;(\\&amp;quot; + newlineCharUnion + \\&amp;quot;)|((.*?)(\\&amp;quot; + breakRules + \\&amp;quot;))\\&amp;quot;, &amp;apos;gm&amp;apos;);\\n};\\nexport var breakTextIntoLines = function (text, wordBreaks, maxWidth, computeWidthOfText) {\\n    var regex = buildWordBreakRegex(wordBreaks);\\n    var words = cleanText(text).match(regex);\\n    var currLine = &amp;apos;&amp;apos;;\\n    var currWidth = 0;\\n    var lines = [];\\n    var pushCurrLine = function () {\\n        if (currLine !== &amp;apos;&amp;apos;)\\n            lines.push(currLine);\\n        currLine = &amp;apos;&amp;apos;;\\n        currWidth = 0;\\n    };\\n    for (var idx = 0, len = words.length; idx &amp;lt; len; idx++) {\\n        var word = words[idx];\\n        if (isNewlineChar(word)) {\\n            pushCurrLine();\\n        }\\n        else {\\n            var width = computeWidthOfText(word);\\n            if (currWidth + width &amp;gt; maxWidth)\\n                pushCurrLine();\\n            currLine += word;\\n            currWidth += width;\\n        }\\n    }\\n    pushCurrLine();\\n    return lines;\\n};\\n// See section \\&amp;quot;7.9.4 Dates\\&amp;quot; of the PDF specification\\nvar dateRegex = /^D:(\\\\d\\\\d\\\\d\\\\d)(\\\\d\\\\d)?(\\\\d\\\\d)?(\\\\d\\\\d)?(\\\\d\\\\d)?(\\\\d\\\\d)?([+\\\\-Z])?(\\\\d\\\\d)?&amp;apos;?(\\\\d\\\\d)?&amp;apos;?$/;\\nexport var parseDate = function (dateStr) {\\n    var match = dateStr.match(dateRegex);\\n    if (!match)\\n        return undefined;\\n    var year = match[1], _a = match[2], month = _a === void 0 ? &amp;apos;01&amp;apos; : _a, _b = match[3], day = _b === void 0 ? &amp;apos;01&amp;apos; : _b, _c = match[4], hours = _c === void 0 ? &amp;apos;00&amp;apos; : _c, _d = match[5], mins = _d === void 0 ? &amp;apos;00&amp;apos; : _d, _e = match[6], secs = _e === void 0 ? &amp;apos;00&amp;apos; : _e, _f = match[7], offsetSign = _f === void 0 ? &amp;apos;Z&amp;apos; : _f, _g = match[8], offsetHours = _g === void 0 ? &amp;apos;00&amp;apos; : _g, _h = match[9], offsetMins = _h === void 0 ? &amp;apos;00&amp;apos; : _h;\\n    // http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15\\n    var tzOffset = offsetSign === &amp;apos;Z&amp;apos; ? &amp;apos;Z&amp;apos; : \\&amp;quot;\\&amp;quot; + offsetSign + offsetHours + \\&amp;quot;:\\&amp;quot; + offsetMins;\\n    var date = new Date(year + \\&amp;quot;-\\&amp;quot; + month + \\&amp;quot;-\\&amp;quot; + day + \\&amp;quot;T\\&amp;quot; + hours + \\&amp;quot;:\\&amp;quot; + mins + \\&amp;quot;:\\&amp;quot; + secs + tzOffset);\\n    return date;\\n};\\nexport var findLastMatch = function (value, regex) {\\n    var _a;\\n    var position = 0;\\n    var lastMatch;\\n    while (position &amp;lt; value.length) {\\n        var match = value.substring(position).match(regex);\\n        if (!match)\\n            return { match: lastMatch, pos: position };\\n        lastMatch = match;\\n        position += ((_a = match.index) !== null &amp;amp;&amp;amp; _a !== void 0 ? _a : 0) + match[0].length;\\n    }\\n    return { match: lastMatch, pos: position };\\n};\\n//# sourceMappingURL=strings.js.map&amp;quot;,&amp;quot;import { decodeFromBase64DataUri } from \\&amp;quot;./base64\\&amp;quot;;\\nimport { charFromCode } from \\&amp;quot;./strings\\&amp;quot;;\\nexport var last = function (array) { return array[array.length - 1]; };\\n// export const dropLast = &amp;lt;T&amp;gt;(array: T[]): T[] =&amp;gt;\\n// array.slice(0, array.length - 1);\\nexport var typedArrayFor = function (value) {\\n    if (value instanceof Uint8Array)\\n        return value;\\n    var length = value.length;\\n    var typedArray = new Uint8Array(length);\\n    for (var idx = 0; idx &amp;lt; length; idx++) {\\n        typedArray[idx] = value.charCodeAt(idx);\\n    }\\n    return typedArray;\\n};\\nexport var mergeIntoTypedArray = function () {\\n    var arrays = [];\\n    for (var _i = 0; _i &amp;lt; arguments.length; _i++) {\\n        arrays[_i] = arguments[_i];\\n    }\\n    var arrayCount = arrays.length;\\n    var typedArrays = [];\\n    for (var idx = 0; idx &amp;lt; arrayCount; idx++) {\\n        var element = arrays[idx];\\n        typedArrays[idx] =\\n            element instanceof Uint8Array ? element : typedArrayFor(element);\\n    }\\n    var totalSize = 0;\\n    for (var idx = 0; idx &amp;lt; arrayCount; idx++) {\\n        totalSize += arrays[idx].length;\\n    }\\n    var merged = new Uint8Array(totalSize);\\n    var offset = 0;\\n    for (var arrIdx = 0; arrIdx &amp;lt; arrayCount; arrIdx++) {\\n        var arr = typedArrays[arrIdx];\\n        for (var byteIdx = 0, arrLen = arr.length; byteIdx &amp;lt; arrLen; byteIdx++) {\\n            merged[offset++] = arr[byteIdx];\\n        }\\n    }\\n    return merged;\\n};\\nexport var mergeUint8Arrays = function (arrays) {\\n    var totalSize = 0;\\n    for (var idx = 0, len = arrays.length; idx &amp;lt; len; idx++) {\\n        totalSize += arrays[idx].length;\\n    }\\n    var mergedBuffer = new Uint8Array(totalSize);\\n    var offset = 0;\\n    for (var idx = 0, len = arrays.length; idx &amp;lt; len; idx++) {\\n        var array = arrays[idx];\\n        mergedBuffer.set(array, offset);\\n        offset += array.length;\\n    }\\n    return mergedBuffer;\\n};\\nexport var arrayAsString = function (array) {\\n    var str = &amp;apos;&amp;apos;;\\n    for (var idx = 0, len = array.length; idx &amp;lt; len; idx++) {\\n        str += charFromCode(array[idx]);\\n    }\\n    return str;\\n};\\nexport var byAscendingId = function (a, b) { return a.id - b.id; };\\nexport var sortedUniq = function (array, indexer) {\\n    var uniq = [];\\n    for (var idx = 0, len = array.length; idx &amp;lt; len; idx++) {\\n        var curr = array[idx];\\n        var prev = array[idx - 1];\\n        if (idx === 0 || indexer(curr) !== indexer(prev)) {\\n            uniq.push(curr);\\n        }\\n    }\\n    return uniq;\\n};\\n// Arrays and TypedArrays in JS both have .reverse() methods, which would seem\\n// to negate the need for this function. However, not all runtimes support this\\n// method (e.g. React Native). This function compensates for that fact.\\nexport var reverseArray = function (array) {\\n    var arrayLen = array.length;\\n    for (var idx = 0, len = Math.floor(arrayLen / 2); idx &amp;lt; len; idx++) {\\n        var leftIdx = idx;\\n        var rightIdx = arrayLen - idx - 1;\\n        var temp = array[idx];\\n        array[leftIdx] = array[rightIdx];\\n        array[rightIdx] = temp;\\n    }\\n    return array;\\n};\\nexport var sum = function (array) {\\n    var total = 0;\\n    for (var idx = 0, len = array.length; idx &amp;lt; len; idx++) {\\n        total += array[idx];\\n    }\\n    return total;\\n};\\nexport var range = function (start, end) {\\n    var arr = new Array(end - start);\\n    for (var idx = 0, len = arr.length; idx &amp;lt; len; idx++) {\\n        arr[idx] = start + idx;\\n    }\\n    return arr;\\n};\\nexport var pluckIndices = function (arr, indices) {\\n    var plucked = new Array(indices.length);\\n    for (var idx = 0, len = indices.length; idx &amp;lt; len; idx++) {\\n        plucked[idx] = arr[indices[idx]];\\n    }\\n    return plucked;\\n};\\nexport var canBeConvertedToUint8Array = function (input) {\\n    return input instanceof Uint8Array ||\\n        input instanceof ArrayBuffer ||\\n        typeof input === &amp;apos;string&amp;apos;;\\n};\\nexport var toUint8Array = function (input) {\\n    if (typeof input === &amp;apos;string&amp;apos;) {\\n        return decodeFromBase64DataUri(input);\\n    }\\n    else if (input instanceof ArrayBuffer) {\\n        return new Uint8Array(input);\\n    }\\n    else if (input instanceof Uint8Array) {\\n        return input;\\n    }\\n    else {\\n        throw new TypeError(&amp;apos;`input` must be one of `string | ArrayBuffer | Uint8Array`&amp;apos;);\\n    }\\n};\\n//# sourceMappingURL=arrays.js.map&amp;quot;,&amp;quot;/**\\n * Returns a Promise that resolves after at least one tick of the\\n * Macro Task Queue occurs.\\n */\\nexport var waitForTick = function () {\\n    return new Promise(function (resolve) {\\n        setTimeout(function () { return resolve(); }, 0);\\n    });\\n};\\n//# sourceMappingURL=async.js.map&amp;quot;,&amp;quot;import { toHexString } from \\&amp;quot;./strings\\&amp;quot;;\\n/**\\n * Encodes a string to UTF-8.\\n *\\n * @param input The string to be encoded.\\n * @param byteOrderMark Whether or not a byte order marker (BOM) should be added\\n *                      to the start of the encoding. (default `true`)\\n * @returns A Uint8Array containing the UTF-8 encoding of the input string.\\n *\\n * -----------------------------------------------------------------------------\\n *\\n * JavaScript strings are composed of Unicode code points. Code points are\\n * integers in the range 0 to 1,114,111 (0x10FFFF). When serializing a string,\\n * it must be encoded as a sequence of words. A word is typically 8, 16, or 32\\n * bytes in size. As such, Unicode defines three encoding forms: UTF-8, UTF-16,\\n * and UTF-32. These encoding forms are described in the Unicode standard [1].\\n * This function implements the UTF-8 encoding form.\\n *\\n * -----------------------------------------------------------------------------\\n *\\n * In UTF-8, each code point is mapped to a sequence of 1, 2, 3, or 4 bytes.\\n * Note that the logic which defines this mapping is slightly convoluted, and\\n * not as straightforward as the mapping logic for UTF-16 or UTF-32. The UTF-8\\n * mapping logic is as follows [2]:\\n *\\n * • If a code point is in the range U+0000..U+007F, then view it as a 7-bit\\n *   integer: 0bxxxxxxx. Map the code point to 1 byte with the first high order\\n *   bit set to 0:\\n *\\n *       b1=0b0xxxxxxx\\n *\\n * • If a code point is in the range U+0080..U+07FF, then view it as an 11-bit\\n *   integer: 0byyyyyxxxxxx. Map the code point to 2 bytes with the first 5 bits\\n *   of the code point stored in the first byte, and the last 6 bits stored in\\n *   the second byte:\\n *\\n *       b1=0b110yyyyy    b2=0b10xxxxxx\\n *\\n * • If a code point is in the range U+0800..U+FFFF, then view it as a 16-bit\\n *   integer, 0bzzzzyyyyyyxxxxxx. Map the code point to 3 bytes with the first\\n *   4 bits stored in the first byte, the next 6 bits stored in the second byte,\\n *   and the last 6 bits in the third byte:\\n *\\n *       b1=0b1110zzzz    b2=0b10yyyyyy    b3=0b10xxxxxx\\n *\\n * • If a code point is in the range U+10000...U+10FFFF, then view it as a\\n *   21-bit integer, 0bvvvzzzzzzyyyyyyxxxxxx. Map the code point to 4 bytes with\\n *   the first 3 bits stored in the first byte, the next 6 bits stored in the\\n *   second byte, the next 6 bits stored in the third byte, and the last 6 bits\\n *   stored in the fourth byte:\\n *\\n *       b1=0b11110xxx    b2=0b10zzzzzz    b3=0b10yyyyyy    b4=0b10xxxxxx\\n *\\n * -----------------------------------------------------------------------------\\n *\\n * It is important to note, when iterating through the code points of a string\\n * in JavaScript, that if a character is encoded as a surrogate pair it will\\n * increase the string&amp;apos;s length by 2 instead of 1 [4]. For example:\\n *\\n * ```\\n * &amp;gt; &amp;apos;a&amp;apos;.length\\n * 1\\n * &amp;gt; &amp;apos;💩&amp;apos;.length\\n * 2\\n * &amp;gt; &amp;apos;語&amp;apos;.length\\n * 1\\n * &amp;gt; &amp;apos;a💩語&amp;apos;.length\\n * 4\\n * ```\\n *\\n * The results of the above example are explained by the fact that the\\n * characters &amp;apos;a&amp;apos; and &amp;apos;語&amp;apos; are not represented by surrogate pairs, but &amp;apos;💩&amp;apos; is.\\n *\\n * Because of this idiosyncrasy in JavaScript&amp;apos;s string implementation and APIs,\\n * we must \\&amp;quot;jump\\&amp;quot; an extra index after encoding a character as a surrogate\\n * pair. In practice, this means we must increment the index of our for loop by\\n * 2 if we encode a surrogate pair, and 1 in all other cases.\\n *\\n * -----------------------------------------------------------------------------\\n *\\n * References:\\n *   - [1] https://www.unicode.org/versions/Unicode12.0.0/UnicodeStandard-12.0.pdf\\n *         3.9  Unicode Encoding Forms - UTF-8\\n *   - [2] http://www.herongyang.com/Unicode/UTF-8-UTF-8-Encoding.html\\n *   - [3] http://www.herongyang.com/Unicode/UTF-8-UTF-8-Encoding-Algorithm.html\\n *   - [4] https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length#Description\\n *\\n */\\nexport var utf8Encode = function (input, byteOrderMark) {\\n    if (byteOrderMark === void 0) { byteOrderMark = true; }\\n    var encoded = [];\\n    if (byteOrderMark)\\n        encoded.push(0xef, 0xbb, 0xbf);\\n    for (var idx = 0, len = input.length; idx &amp;lt; len;) {\\n        var codePoint = input.codePointAt(idx);\\n        // One byte encoding\\n        if (codePoint &amp;lt; 0x80) {\\n            var byte1 = codePoint &amp;amp; 0x7f;\\n            encoded.push(byte1);\\n            idx += 1;\\n        }\\n        // Two byte encoding\\n        else if (codePoint &amp;lt; 0x0800) {\\n            var byte1 = ((codePoint &amp;gt;&amp;gt; 6) &amp;amp; 0x1f) | 0xc0;\\n            var byte2 = (codePoint &amp;amp; 0x3f) | 0x80;\\n            encoded.push(byte1, byte2);\\n            idx += 1;\\n        }\\n        // Three byte encoding\\n        else if (codePoint &amp;lt; 0x010000) {\\n            var byte1 = ((codePoint &amp;gt;&amp;gt; 12) &amp;amp; 0x0f) | 0xe0;\\n            var byte2 = ((codePoint &amp;gt;&amp;gt; 6) &amp;amp; 0x3f) | 0x80;\\n            var byte3 = (codePoint &amp;amp; 0x3f) | 0x80;\\n            encoded.push(byte1, byte2, byte3);\\n            idx += 1;\\n        }\\n        // Four byte encoding (surrogate pair)\\n        else if (codePoint &amp;lt; 0x110000) {\\n            var byte1 = ((codePoint &amp;gt;&amp;gt; 18) &amp;amp; 0x07) | 0xf0;\\n            var byte2 = ((codePoint &amp;gt;&amp;gt; 12) &amp;amp; 0x3f) | 0x80;\\n            var byte3 = ((codePoint &amp;gt;&amp;gt; 6) &amp;amp; 0x3f) | 0x80;\\n            var byte4 = ((codePoint &amp;gt;&amp;gt; 0) &amp;amp; 0x3f) | 0x80;\\n            encoded.push(byte1, byte2, byte3, byte4);\\n            idx += 2;\\n        }\\n        // Should never reach this case\\n        else\\n            throw new Error(\\&amp;quot;Invalid code point: 0x\\&amp;quot; + toHexString(codePoint));\\n    }\\n    return new Uint8Array(encoded);\\n};\\n/**\\n * Encodes a string to UTF-16.\\n *\\n * @param input The string to be encoded.\\n * @param byteOrderMark Whether or not a byte order marker (BOM) should be added\\n *                      to the start of the encoding. (default `true`)\\n * @returns A Uint16Array containing the UTF-16 encoding of the input string.\\n *\\n * -----------------------------------------------------------------------------\\n *\\n * JavaScript strings are composed of Unicode code points. Code points are\\n * integers in the range 0 to 1,114,111 (0x10FFFF). When serializing a string,\\n * it must be encoded as a sequence of words. A word is typically 8, 16, or 32\\n * bytes in size. As such, Unicode defines three encoding forms: UTF-8, UTF-16,\\n * and UTF-32. These encoding forms are described in the Unicode standard [1].\\n * This function implements the UTF-16 encoding form.\\n *\\n * -----------------------------------------------------------------------------\\n *\\n * In UTF-16, each code point is mapped to one or two 16-bit integers. The\\n * UTF-16 mapping logic is as follows [2]:\\n *\\n * • If a code point is in the range U+0000..U+FFFF, then map the code point to\\n *   a 16-bit integer with the most significant byte first.\\n *\\n * • If a code point is in the range U+10000..U+10000, then map the code point\\n *   to two 16-bit integers. The first integer should contain the high surrogate\\n *   and the second integer should contain the low surrogate. Both surrogates\\n *   should be written with the most significant byte first.\\n *\\n * -----------------------------------------------------------------------------\\n *\\n * It is important to note, when iterating through the code points of a string\\n * in JavaScript, that if a character is encoded as a surrogate pair it will\\n * increase the string&amp;apos;s length by 2 instead of 1 [4]. For example:\\n *\\n * ```\\n * &amp;gt; &amp;apos;a&amp;apos;.length\\n * 1\\n * &amp;gt; &amp;apos;💩&amp;apos;.length\\n * 2\\n * &amp;gt; &amp;apos;語&amp;apos;.length\\n * 1\\n * &amp;gt; &amp;apos;a💩語&amp;apos;.length\\n * 4\\n * ```\\n *\\n * The results of the above example are explained by the fact that the\\n * characters &amp;apos;a&amp;apos; and &amp;apos;語&amp;apos; are not represented by surrogate pairs, but &amp;apos;💩&amp;apos; is.\\n *\\n * Because of this idiosyncrasy in JavaScript&amp;apos;s string implementation and APIs,\\n * we must \\&amp;quot;jump\\&amp;quot; an extra index after encoding a character as a surrogate\\n * pair. In practice, this means we must increment the index of our for loop by\\n * 2 if we encode a surrogate pair, and 1 in all other cases.\\n *\\n * -----------------------------------------------------------------------------\\n *\\n * References:\\n *   - [1] https://www.unicode.org/versions/Unicode12.0.0/UnicodeStandard-12.0.pdf\\n *         3.9  Unicode Encoding Forms - UTF-8\\n *   - [2] http://www.herongyang.com/Unicode/UTF-16-UTF-16-Encoding.html\\n *   - [3] https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length#Description\\n *\\n */\\nexport var utf16Encode = function (input, byteOrderMark) {\\n    if (byteOrderMark === void 0) { byteOrderMark = true; }\\n    var encoded = [];\\n    if (byteOrderMark)\\n        encoded.push(0xfeff);\\n    for (var idx = 0, len = input.length; idx &amp;lt; len;) {\\n        var codePoint = input.codePointAt(idx);\\n        // Two byte encoding\\n        if (codePoint &amp;lt; 0x010000) {\\n            encoded.push(codePoint);\\n            idx += 1;\\n        }\\n        // Four byte encoding (surrogate pair)\\n        else if (codePoint &amp;lt; 0x110000) {\\n            encoded.push(highSurrogate(codePoint), lowSurrogate(codePoint));\\n            idx += 2;\\n        }\\n        // Should never reach this case\\n        else\\n            throw new Error(\\&amp;quot;Invalid code point: 0x\\&amp;quot; + toHexString(codePoint));\\n    }\\n    return new Uint16Array(encoded);\\n};\\n/**\\n * Returns `true` if the `codePoint` is within the\\n * Basic Multilingual Plane (BMP). Code points inside the BMP are not encoded\\n * with surrogate pairs.\\n * @param codePoint The code point to be evaluated.\\n *\\n * Reference: https://en.wikipedia.org/wiki/UTF-16#Description\\n */\\nexport var isWithinBMP = function (codePoint) {\\n    return codePoint &amp;gt;= 0 &amp;amp;&amp;amp; codePoint &amp;lt;= 0xffff;\\n};\\n/**\\n * Returns `true` if the given `codePoint` is valid and must be represented\\n * with a surrogate pair when encoded.\\n * @param codePoint The code point to be evaluated.\\n *\\n * Reference: https://en.wikipedia.org/wiki/UTF-16#Description\\n */\\nexport var hasSurrogates = function (codePoint) {\\n    return codePoint &amp;gt;= 0x010000 &amp;amp;&amp;amp; codePoint &amp;lt;= 0x10ffff;\\n};\\n// From Unicode 3.0 spec, section 3.7:\\n//   http://unicode.org/versions/Unicode3.0.0/ch03.pdf\\nexport var highSurrogate = function (codePoint) {\\n    return Math.floor((codePoint - 0x10000) / 0x400) + 0xd800;\\n};\\n// From Unicode 3.0 spec, section 3.7:\\n//   http://unicode.org/versions/Unicode3.0.0/ch03.pdf\\nexport var lowSurrogate = function (codePoint) {\\n    return ((codePoint - 0x10000) % 0x400) + 0xdc00;\\n};\\nvar ByteOrder;\\n(function (ByteOrder) {\\n    ByteOrder[\\&amp;quot;BigEndian\\&amp;quot;] = \\&amp;quot;BigEndian\\&amp;quot;;\\n    ByteOrder[\\&amp;quot;LittleEndian\\&amp;quot;] = \\&amp;quot;LittleEndian\\&amp;quot;;\\n})(ByteOrder || (ByteOrder = {}));\\nvar REPLACEMENT = &amp;apos;�&amp;apos;.codePointAt(0);\\n/**\\n * Decodes a Uint8Array of data to a string using UTF-16.\\n *\\n * Note that this function attempts to recover from erronous input by\\n * inserting the replacement character (�) to mark invalid code points\\n * and surrogate pairs.\\n *\\n * @param input A Uint8Array containing UTF-16 encoded data\\n * @param byteOrderMark Whether or not a byte order marker (BOM) should be read\\n *                      at the start of the encoding. (default `true`)\\n * @returns The decoded string.\\n */\\nexport var utf16Decode = function (input, byteOrderMark) {\\n    if (byteOrderMark === void 0) { byteOrderMark = true; }\\n    // Need at least 2 bytes of data in UTF-16 encodings\\n    if (input.length &amp;lt;= 1)\\n        return String.fromCodePoint(REPLACEMENT);\\n    var byteOrder = byteOrderMark ? readBOM(input) : ByteOrder.BigEndian;\\n    // Skip byte order mark if needed\\n    var idx = byteOrderMark ? 2 : 0;\\n    var codePoints = [];\\n    while (input.length - idx &amp;gt;= 2) {\\n        var first = decodeValues(input[idx++], input[idx++], byteOrder);\\n        if (isHighSurrogate(first)) {\\n            if (input.length - idx &amp;lt; 2) {\\n                // Need at least 2 bytes left for the low surrogate that is required\\n                codePoints.push(REPLACEMENT);\\n            }\\n            else {\\n                var second = decodeValues(input[idx++], input[idx++], byteOrder);\\n                if (isLowSurrogate(second)) {\\n                    codePoints.push(first, second);\\n                }\\n                else {\\n                    // Low surrogates should always follow high surrogates\\n                    codePoints.push(REPLACEMENT);\\n                }\\n            }\\n        }\\n        else if (isLowSurrogate(first)) {\\n            // High surrogates should always come first since `decodeValues()`\\n            // accounts for the byte ordering\\n            idx += 2;\\n            codePoints.push(REPLACEMENT);\\n        }\\n        else {\\n            codePoints.push(first);\\n        }\\n    }\\n    // There shouldn&amp;apos;t be extra byte(s) left over\\n    if (idx &amp;lt; input.length)\\n        codePoints.push(REPLACEMENT);\\n    return String.fromCodePoint.apply(String, codePoints);\\n};\\n/**\\n * Returns `true` if the given `codePoint` is a high surrogate.\\n * @param codePoint The code point to be evaluated.\\n *\\n * Reference: https://en.wikipedia.org/wiki/UTF-16#Description\\n */\\nvar isHighSurrogate = function (codePoint) {\\n    return codePoint &amp;gt;= 0xd800 &amp;amp;&amp;amp; codePoint &amp;lt;= 0xdbff;\\n};\\n/**\\n * Returns `true` if the given `codePoint` is a low surrogate.\\n * @param codePoint The code point to be evaluated.\\n *\\n * Reference: https://en.wikipedia.org/wiki/UTF-16#Description\\n */\\nvar isLowSurrogate = function (codePoint) {\\n    return codePoint &amp;gt;= 0xdc00 &amp;amp;&amp;amp; codePoint &amp;lt;= 0xdfff;\\n};\\n/**\\n * Decodes the given utf-16 values first and second using the specified\\n * byte order.\\n * @param first The first byte of the encoding.\\n * @param second The second byte of the encoding.\\n * @param byteOrder The byte order of the encoding.\\n * Reference: https://en.wikipedia.org/wiki/UTF-16#Examples\\n */\\nvar decodeValues = function (first, second, byteOrder) {\\n    // Append the binary representation of the preceding byte by shifting the\\n    // first one 8 to the left and than applying a bitwise or-operator to append\\n    // the second one.\\n    if (byteOrder === ByteOrder.LittleEndian)\\n        return (second &amp;lt;&amp;lt; 8) | first;\\n    if (byteOrder === ByteOrder.BigEndian)\\n        return (first &amp;lt;&amp;lt; 8) | second;\\n    throw new Error(\\&amp;quot;Invalid byteOrder: \\&amp;quot; + byteOrder);\\n};\\n/**\\n * Returns whether the given array contains a byte order mark for the\\n * UTF-16BE or UTF-16LE encoding. If it has neither, BigEndian is assumed.\\n *\\n * Reference: https://en.wikipedia.org/wiki/Byte_order_mark#UTF-16\\n *\\n * @param bytes The byte array to be evaluated.\\n */\\n// prettier-ignore\\nvar readBOM = function (bytes) { return (hasUtf16BigEndianBOM(bytes) ? ByteOrder.BigEndian\\n    : hasUtf16LittleEndianBOM(bytes) ? ByteOrder.LittleEndian\\n        : ByteOrder.BigEndian); };\\nvar hasUtf16BigEndianBOM = function (bytes) {\\n    return bytes[0] === 0xfe &amp;amp;&amp;amp; bytes[1] === 0xff;\\n};\\nvar hasUtf16LittleEndianBOM = function (bytes) {\\n    return bytes[0] === 0xff &amp;amp;&amp;amp; bytes[1] === 0xfe;\\n};\\nexport var hasUtf16BOM = function (bytes) {\\n    return hasUtf16BigEndianBOM(bytes) || hasUtf16LittleEndianBOM(bytes);\\n};\\n//# sourceMappingURL=unicode.js.map&amp;quot;,&amp;quot;// tslint:disable radix\\n/**\\n * Converts a number to its string representation in decimal. This function\\n * differs from simply converting a number to a string with `.toString()`\\n * because this function&amp;apos;s output string will **not** contain exponential\\n * notation.\\n *\\n * Credit: https://stackoverflow.com/a/46545519\\n */\\nexport var numberToString = function (num) {\\n    var numStr = String(num);\\n    if (Math.abs(num) &amp;lt; 1.0) {\\n        var e = parseInt(num.toString().split(&amp;apos;e-&amp;apos;)[1]);\\n        if (e) {\\n            var negative = num &amp;lt; 0;\\n            if (negative)\\n                num *= -1;\\n            num *= Math.pow(10, e - 1);\\n            numStr = &amp;apos;0.&amp;apos; + new Array(e).join(&amp;apos;0&amp;apos;) + num.toString().substring(2);\\n            if (negative)\\n                numStr = &amp;apos;-&amp;apos; + numStr;\\n        }\\n    }\\n    else {\\n        var e = parseInt(num.toString().split(&amp;apos;+&amp;apos;)[1]);\\n        if (e &amp;gt; 20) {\\n            e -= 20;\\n            num /= Math.pow(10, e);\\n            numStr = num.toString() + new Array(e + 1).join(&amp;apos;0&amp;apos;);\\n        }\\n    }\\n    return numStr;\\n};\\nexport var sizeInBytes = function (n) { return Math.ceil(n.toString(2).length / 8); };\\n/**\\n * Converts a number into its constituent bytes and returns them as\\n * a number[].\\n *\\n * Returns most significant byte as first element in array. It may be necessary\\n * to call .reverse() to get the bits in the desired order.\\n *\\n * Example:\\n *   bytesFor(0x02A41E) =&amp;gt; [ 0b10, 0b10100100, 0b11110 ]\\n *\\n * Credit for algorithm: https://stackoverflow.com/a/1936865\\n */\\nexport var bytesFor = function (n) {\\n    var bytes = new Uint8Array(sizeInBytes(n));\\n    for (var i = 1; i &amp;lt;= bytes.length; i++) {\\n        bytes[i - 1] = n &amp;gt;&amp;gt; ((bytes.length - i) * 8);\\n    }\\n    return bytes;\\n};\\n//# sourceMappingURL=numbers.js.map&amp;quot;,&amp;quot;export var error = function (msg) {\\n    throw new Error(msg);\\n};\\n//# sourceMappingURL=errors.js.map&amp;quot;,&amp;quot;&amp;apos;use strict&amp;apos;;\\n\\n\\nvar TYPED_OK =  (typeof Uint8Array !== &amp;apos;undefined&amp;apos;) &amp;amp;&amp;amp;\\n                (typeof Uint16Array !== &amp;apos;undefined&amp;apos;) &amp;amp;&amp;amp;\\n                (typeof Int32Array !== &amp;apos;undefined&amp;apos;);\\n\\nfunction _has(obj, key) {\\n  return Object.prototype.hasOwnProperty.call(obj, key);\\n}\\n\\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\\n  var sources = Array.prototype.slice.call(arguments, 1);\\n  while (sources.length) {\\n    var source = sources.shift();\\n    if (!source) { continue; }\\n\\n    if (typeof source !== &amp;apos;object&amp;apos;) {\\n      throw new TypeError(source + &amp;apos;must be non-object&amp;apos;);\\n    }\\n\\n    for (var p in source) {\\n      if (_has(source, p)) {\\n        obj[p] = source[p];\\n      }\\n    }\\n  }&quot;,&quot;numLines&quot;:1}}"><div class="flex relative bg-white font-mono text-sm leading-6"><div class="py-4 border-b border-x border-slate-300 bg-slate-100 text-right select-none"><div><div class="relative"><a id="L1" href="#L1" class="inline-block w-full pl-4 sm:pl-6 pr-2 text-slate-600 hover:text-slate-950 outline-none">1</a></div></div></div><div class="py-4 pl-4 pr-6 relative border-b border-r border-slate-300 flex-grow whitespace-pre overflow-x-auto" style="tab-size:2;">{&quot;version&quot;:3,&quot;file&quot;:&quot;pdf-lib.js&quot;,&quot;sources&quot;:[&quot;../node_modules/tslib/tslib.es6.js&quot;,&quot;../es/utils/base64.js&quot;,&quot;../es/utils/strings.js&quot;,&quot;../es/utils/arrays.js&quot;,&quot;../es/utils/async.js&quot;,&quot;../es/utils/unicode.js&quot;,&quot;../es/utils/numbers.js&quot;,&quot;../es/utils/errors.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/utils/common.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/trees.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/adler32.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/crc32.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/messages.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/deflate.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/utils/strings.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/zstream.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/deflate.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/inffast.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/inftrees.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/inflate.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/constants.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/zlib/gzheader.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/lib/inflate.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/node_modules/pako/index.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/es/utils.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/es/Font.js&quot;,&quot;../node_modules/@pdf-lib/standard-fonts/es/Encoding.js&quot;,&quot;../es/utils/objects.js&quot;,&quot;../es/utils/validators.js&quot;,&quot;../es/utils/pdfDocEncoding.js&quot;,&quot;../es/utils/Cache.js&quot;,&quot;../es/core/errors.js&quot;,&quot;../es/core/syntax/CharCodes.js&quot;,&quot;../node_modules/pako/lib/utils/common.js&quot;,&quot;../node_modules/pako/lib/zlib/trees.js&quot;,&quot;../node_modules/pako/lib/zlib/adler32.js&quot;,&quot;../node_modules/pako/lib/zlib/crc32.js&quot;,&quot;../node_modules/pako/lib/zlib/messages.js&quot;,&quot;../node_modules/pako/lib/zlib/deflate.js&quot;,&quot;../node_modules/pako/lib/utils/strings.js&quot;,&quot;../node_modules/pako/lib/zlib/zstream.js&quot;,&quot;../node_modules/pako/lib/deflate.js&quot;,&quot;../node_modules/pako/lib/zlib/inffast.js&quot;,&quot;../node_modules/pako/lib/zlib/inftrees.js&quot;,&quot;../node_modules/pako/lib/zlib/inflate.js&quot;,&quot;../node_modules/pako/lib/zlib/constants.js&quot;,&quot;../node_modules/pako/lib/zlib/gzheader.js&quot;,&quot;../node_modules/pako/lib/inflate.js&quot;,&quot;../node_modules/pako/index.js&quot;,&quot;../es/core/document/PDFHeader.js&quot;,&quot;../es/core/objects/PDFObject.js&quot;,&quot;../es/core/objects/PDFNumber.js&quot;,&quot;../es/core/objects/PDFArray.js&quot;,&quot;../es/core/objects/PDFBool.js&quot;,&quot;../es/core/syntax/Delimiters.js&quot;,&quot;../es/core/syntax/Whitespace.js&quot;,&quot;../es/core/syntax/Irregular.js&quot;,&quot;../es/core/objects/PDFName.js&quot;,&quot;../es/core/objects/PDFNull.js&quot;,&quot;../es/core/objects/PDFDict.js&quot;,&quot;../es/core/objects/PDFStream.js&quot;,&quot;../es/core/objects/PDFRawStream.js&quot;,&quot;../es/core/objects/PDFRef.js&quot;,&quot;../es/core/operators/PDFOperator.js&quot;,&quot;../es/core/operators/PDFOperatorNames.js&quot;,&quot;../es/core/structures/PDFFlateStream.js&quot;,&quot;../es/core/structures/PDFContentStream.js&quot;,&quot;../es/utils/rng.js&quot;,&quot;../es/core/PDFContext.js&quot;,&quot;../es/core/structures/PDFPageLeaf.js&quot;,&quot;../es/core/PDFObjectCopier.js&quot;,&quot;../es/core/document/PDFCrossRefSection.js&quot;,&quot;../es/core/document/PDFTrailer.js&quot;,&quot;../es/core/document/PDFTrailerDict.js&quot;,&quot;../es/core/structures/PDFObjectStream.js&quot;,&quot;../es/core/writers/PDFWriter.js&quot;,&quot;../es/core/objects/PDFInvalidObject.js&quot;,&quot;../es/core/structures/PDFCrossRefStream.js&quot;,&quot;../es/core/writers/PDFStreamWriter.js&quot;,&quot;../es/core/objects/PDFHexString.js&quot;,&quot;../es/core/embedders/StandardFontEmbedder.js&quot;,&quot;../es/core/embedders/CMap.js&quot;,&quot;../es/core/embedders/FontFlags.js&quot;,&quot;../es/core/objects/PDFString.js&quot;,&quot;../es/core/embedders/CustomFontEmbedder.js&quot;,&quot;../es/core/embedders/CustomFontSubsetEmbedder.js&quot;,&quot;../es/core/embedders/FileEmbedder.js&quot;,&quot;../es/core/embedders/JpegEmbedder.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/utils/common.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/trees.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/adler32.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/crc32.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/messages.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/deflate.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/utils/strings.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/zstream.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/deflate.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/inffast.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/inftrees.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/inflate.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/constants.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/zlib/gzheader.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/lib/inflate.js&quot;,&quot;../node_modules/@pdf-lib/upng/node_modules/pako/index.js&quot;,&quot;../node_modules/@pdf-lib/upng/UPNG.js&quot;,&quot;../es/utils/png.js&quot;,&quot;../es/core/embedders/PngEmbedder.js&quot;,&quot;../es/core/streams/Stream.js&quot;,&quot;../es/core/streams/DecodeStream.js&quot;,&quot;../es/core/streams/Ascii85Stream.js&quot;,&quot;../es/core/streams/AsciiHexStream.js&quot;,&quot;../es/core/streams/FlateStream.js&quot;,&quot;../es/core/streams/LZWStream.js&quot;,&quot;../es/core/streams/RunLengthStream.js&quot;,&quot;../es/core/streams/decode.js&quot;,&quot;../es/core/embedders/PDFPageEmbedder.js&quot;,&quot;../es/core/interactive/ViewerPreferences.js&quot;,&quot;../es/core/acroform/PDFAcroField.js&quot;,&quot;../es/core/annotation/BorderStyle.js&quot;,&quot;../es/core/annotation/PDFAnnotation.js&quot;,&quot;../es/core/annotation/AppearanceCharacteristics.js&quot;,&quot;../es/core/annotation/PDFWidgetAnnotation.js&quot;,&quot;../es/core/acroform/PDFAcroTerminal.js&quot;,&quot;../es/core/acroform/PDFAcroButton.js&quot;,&quot;../es/core/acroform/PDFAcroCheckBox.js&quot;,&quot;../es/core/acroform/flags.js&quot;,&quot;../es/core/acroform/PDFAcroChoice.js&quot;,&quot;../es/core/acroform/PDFAcroComboBox.js&quot;,&quot;../es/core/acroform/PDFAcroNonTerminal.js&quot;,&quot;../es/core/acroform/PDFAcroSignature.js&quot;,&quot;../es/core/acroform/PDFAcroText.js&quot;,&quot;../es/core/acroform/PDFAcroPushButton.js&quot;,&quot;../es/core/acroform/PDFAcroRadioButton.js&quot;,&quot;../es/core/acroform/PDFAcroListBox.js&quot;,&quot;../es/core/acroform/utils.js&quot;,&quot;../es/core/acroform/PDFAcroForm.js&quot;,&quot;../es/core/structures/PDFCatalog.js&quot;,&quot;../es/core/structures/PDFPageTree.js&quot;,&quot;../es/core/syntax/Numeric.js&quot;,&quot;../es/core/parser/BaseParser.js&quot;,&quot;../es/core/parser/ByteStream.js&quot;,&quot;../es/core/syntax/Keywords.js&quot;,&quot;../es/core/parser/PDFObjectParser.js&quot;,&quot;../es/core/parser/PDFObjectStreamParser.js&quot;,&quot;../es/core/parser/PDFXRefStreamParser.js&quot;,&quot;../es/core/parser/PDFParser.js&quot;,&quot;../es/core/annotation/flags.js&quot;,&quot;../es/api/objects.js&quot;,&quot;../es/api/rotations.js&quot;,&quot;../es/api/operators.js&quot;,&quot;../es/api/colors.js&quot;,&quot;../es/api/svgPath.js&quot;,&quot;../es/api/operations.js&quot;,&quot;../es/api/errors.js&quot;,&quot;../es/api/text/alignment.js&quot;,&quot;../es/api/text/layout.js&quot;,&quot;../es/api/form/appearances.js&quot;,&quot;../es/api/PDFEmbeddedPage.js&quot;,&quot;../es/api/PDFFont.js&quot;,&quot;../es/api/PDFImage.js&quot;,&quot;../es/api/image/alignment.js&quot;,&quot;../es/api/form/PDFField.js&quot;,&quot;../es/api/form/PDFCheckBox.js&quot;,&quot;../es/api/form/PDFDropdown.js&quot;,&quot;../es/api/form/PDFOptionList.js&quot;,&quot;../es/api/form/PDFRadioGroup.js&quot;,&quot;../es/api/form/PDFSignature.js&quot;,&quot;../es/api/form/PDFTextField.js&quot;,&quot;../es/api/StandardFonts.js&quot;,&quot;../es/api/form/PDFForm.js&quot;,&quot;../es/api/sizes.js&quot;,&quot;../es/api/PDFDocumentOptions.js&quot;,&quot;../es/api/PDFEmbeddedFile.js&quot;,&quot;../es/api/PDFJavaScript.js&quot;,&quot;../es/core/embedders/JavaScriptEmbedder.js&quot;,&quot;../es/api/PDFDocument.js&quot;,&quot;../es/api/PDFPageOptions.js&quot;,&quot;../es/api/PDFPage.js&quot;,&quot;../es/api/form/PDFButton.js&quot;],&quot;sourcesContent&quot;:[&quot;/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \&quot;License\&quot;); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array &amp;&amp; function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i &lt; n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) &amp;&amp; e.indexOf(p) &lt; 0)\r\n        t[p] = s[p];\r\n    if (s != null &amp;&amp; typeof Object.getOwnPropertySymbols === \&quot;function\&quot;)\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i &lt; p.length; i++) {\r\n            if (e.indexOf(p[i]) &lt; 0 &amp;&amp; Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c &lt; 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \&quot;object\&quot; &amp;&amp; typeof Reflect.decorate === \&quot;function\&quot;) r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i &gt;= 0; i--) if (d = decorators[i]) r = (c &lt; 3 ? d(r) : c &gt; 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c &gt; 3 &amp;&amp; r &amp;&amp; Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \&quot;object\&quot; &amp;&amp; typeof Reflect.metadata === \&quot;function\&quot;) return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\&quot;throw\&quot;](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] &amp; 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \&quot;throw\&quot;: verb(1), \&quot;return\&quot;: verb(2) }, typeof Symbol === \&quot;function\&quot; &amp;&amp; (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\&quot;Generator is already executing.\&quot;);\r\n        while (_) try {\r\n            if (f = 1, y &amp;&amp; (t = op[0] &amp; 2 ? y[\&quot;return\&quot;] : op[0] ? y[\&quot;throw\&quot;] || ((t = y[\&quot;return\&quot;]) &amp;&amp; t.call(y), 0) : y.next) &amp;&amp; !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] &amp; 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length &gt; 0 &amp;&amp; t[t.length - 1]) &amp;&amp; (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 &amp;&amp; (!t || (op[1] &gt; t[0] &amp;&amp; op[1] &lt; t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 &amp;&amp; _.label &lt; t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t &amp;&amp; _.label &lt; t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] &amp; 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \&quot;function\&quot; &amp;&amp; Symbol.iterator, m = s &amp;&amp; o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o &amp;&amp; typeof o.length === \&quot;number\&quot;) return {\r\n        next: function () {\r\n            if (o &amp;&amp; i &gt;= o.length) o = void 0;\r\n            return { value: o &amp;&amp; o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \&quot;Object is not iterable.\&quot; : \&quot;Symbol.iterator is not defined.\&quot;);\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \&quot;function\&quot; &amp;&amp; o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- &gt; 0) &amp;&amp; !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r &amp;&amp; !r.done &amp;&amp; (m = i[\&quot;return\&quot;])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i &lt; arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i &lt; il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i &lt; il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j &lt; jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\&quot;Symbol.asyncIterator is not defined.\&quot;);\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\&quot;next\&quot;), verb(\&quot;throw\&quot;), verb(\&quot;return\&quot;), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) &gt; 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\&quot;next\&quot;, value); }\r\n    function reject(value) { resume(\&quot;throw\&quot;, value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\&quot;next\&quot;), verb(\&quot;throw\&quot;, function (e) { throw e; }), verb(\&quot;return\&quot;), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \&quot;return\&quot; } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\&quot;Symbol.asyncIterator is not defined.\&quot;);\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \&quot;function\&quot; ? __values(o) : o[Symbol.iterator](), i = {}, verb(\&quot;next\&quot;), verb(\&quot;throw\&quot;), verb(\&quot;return\&quot;), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] &amp;&amp; function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \&quot;raw\&quot;, { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod &amp;&amp; mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod &amp;&amp; mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\&quot;attempted to get private field on non-instance\&quot;);\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\&quot;attempted to set private field on non-instance\&quot;);\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n&quot;,&quot;/*\n * The `chars`, `lookup`, `encode`, and `decode` members of this file are\n * licensed under the following:\n *\n *     base64-arraybuffer\n *     https://github.com/niklasvh/base64-arraybuffer\n *\n *     Copyright (c) 2012 Niklas von Hertzen\n *     Licensed under the MIT license.\n *\n */\nvar chars = &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&apos;;\n// Use a lookup table to find the index.\nvar lookup = new Uint8Array(256);\nfor (var i = 0; i &lt; chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport var encodeToBase64 = function (bytes) {\n    var base64 = &apos;&apos;;\n    var len = bytes.length;\n    for (var i = 0; i &lt; len; i += 3) {\n        base64 += chars[bytes[i] &gt;&gt; 2];\n        base64 += chars[((bytes[i] &amp; 3) &lt;&lt; 4) | (bytes[i + 1] &gt;&gt; 4)];\n        base64 += chars[((bytes[i + 1] &amp; 15) &lt;&lt; 2) | (bytes[i + 2] &gt;&gt; 6)];\n        base64 += chars[bytes[i + 2] &amp; 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + &apos;=&apos;;\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + &apos;==&apos;;\n    }\n    return base64;\n};\nexport var decodeFromBase64 = function (base64) {\n    var bufferLength = base64.length * 0.75;\n    var len = base64.length;\n    var i;\n    var p = 0;\n    var encoded1;\n    var encoded2;\n    var encoded3;\n    var encoded4;\n    if (base64[base64.length - 1] === &apos;=&apos;) {\n        bufferLength--;\n        if (base64[base64.length - 2] === &apos;=&apos;) {\n            bufferLength--;\n        }\n    }\n    var bytes = new Uint8Array(bufferLength);\n    for (i = 0; i &lt; len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 &lt;&lt; 2) | (encoded2 &gt;&gt; 4);\n        bytes[p++] = ((encoded2 &amp; 15) &lt;&lt; 4) | (encoded3 &gt;&gt; 2);\n        bytes[p++] = ((encoded3 &amp; 3) &lt;&lt; 6) | (encoded4 &amp; 63);\n    }\n    return bytes;\n};\n// This regex is designed to be as flexible as possible. It will parse certain\n// invalid data URIs.\nvar DATA_URI_PREFIX_REGEX = /^(data)?:?([\\w\\/\\+]+)?;?(charset=[\\w-]+|base64)?.*,/i;\n/**\n * If the `dataUri` input is a data URI, then the data URI prefix must not be\n * longer than 100 characters, or this function will fail to decode it.\n *\n * @param dataUri a base64 data URI or plain base64 string\n * @returns a Uint8Array containing the decoded input\n */\nexport var decodeFromBase64DataUri = function (dataUri) {\n    var trimmedUri = dataUri.trim();\n    var prefix = trimmedUri.substring(0, 100);\n    var res = prefix.match(DATA_URI_PREFIX_REGEX);\n    // Assume it&apos;s not a data URI - just a plain base64 string\n    if (!res)\n        return decodeFromBase64(trimmedUri);\n    // Remove the data URI prefix and parse the remainder as a base64 string\n    var fullMatch = res[0];\n    var data = trimmedUri.substring(fullMatch.length);\n    return decodeFromBase64(data);\n};\n//# sourceMappingURL=base64.js.map&quot;,&quot;export var toCharCode = function (character) { return character.charCodeAt(0); };\nexport var toCodePoint = function (character) { return character.codePointAt(0); };\nexport var toHexStringOfMinLength = function (num, minLength) {\n    return padStart(num.toString(16), minLength, &apos;0&apos;).toUpperCase();\n};\nexport var toHexString = function (num) { return toHexStringOfMinLength(num, 2); };\nexport var charFromCode = function (code) { return String.fromCharCode(code); };\nexport var charFromHexCode = function (hex) { return charFromCode(parseInt(hex, 16)); };\nexport var padStart = function (value, length, padChar) {\n    var padding = &apos;&apos;;\n    for (var idx = 0, len = length - value.length; idx &lt; len; idx++) {\n        padding += padChar;\n    }\n    return padding + value;\n};\nexport var copyStringIntoBuffer = function (str, buffer, offset) {\n    var length = str.length;\n    for (var idx = 0; idx &lt; length; idx++) {\n        buffer[offset++] = str.charCodeAt(idx);\n    }\n    return length;\n};\nexport var addRandomSuffix = function (prefix, suffixLength) {\n    if (suffixLength === void 0) { suffixLength = 4; }\n    return prefix + \&quot;-\&quot; + Math.floor(Math.random() * Math.pow(10, suffixLength));\n};\nexport var escapeRegExp = function (str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, &apos;\\\\$&amp;&apos;);\n};\nexport var cleanText = function (text) {\n    return text.replace(/\\t|\\u0085|\\u2028|\\u2029/g, &apos;    &apos;).replace(/[\\b\\v]/g, &apos;&apos;);\n};\nexport var escapedNewlineChars = [&apos;\\\\n&apos;, &apos;\\\\f&apos;, &apos;\\\\r&apos;, &apos;\\\\u000B&apos;];\nexport var newlineChars = [&apos;\\n&apos;, &apos;\\f&apos;, &apos;\\r&apos;, &apos;\\u000B&apos;];\nexport var isNewlineChar = function (text) { return /^[\\n\\f\\r\\u000B]$/.test(text); };\nexport var lineSplit = function (text) { return text.split(/[\\n\\f\\r\\u000B]/); };\nexport var mergeLines = function (text) {\n    return text.replace(/[\\n\\f\\r\\u000B]/g, &apos; &apos;);\n};\n// JavaScript&apos;s String.charAt() method doesn work on strings containing UTF-16\n// characters (with high and low surrogate pairs), such as 💩 (poo emoji). This\n// `charAtIndex()` function does.\n//\n// Credit: https://github.com/mathiasbynens/String.prototype.at/blob/master/at.js#L14-L48\nexport var charAtIndex = function (text, index) {\n    // Get the first code unit and code unit value\n    var cuFirst = text.charCodeAt(index);\n    var cuSecond;\n    var nextIndex = index + 1;\n    var length = 1;\n    if (\n    // Check if it&apos;s the start of a surrogate pair.\n    cuFirst &gt;= 0xd800 &amp;&amp;\n        cuFirst &lt;= 0xdbff &amp;&amp; // high surrogate\n        text.length &gt; nextIndex // there is a next code unit\n    ) {\n        cuSecond = text.charCodeAt(nextIndex);\n        if (cuSecond &gt;= 0xdc00 &amp;&amp; cuSecond &lt;= 0xdfff)\n            length = 2; // low surrogate\n    }\n    return [text.slice(index, index + length), length];\n};\nexport var charSplit = function (text) {\n    var chars = [];\n    for (var idx = 0, len = text.length; idx &lt; len;) {\n        var _a = charAtIndex(text, idx), c = _a[0], cLen = _a[1];\n        chars.push(c);\n        idx += cLen;\n    }\n    return chars;\n};\nvar buildWordBreakRegex = function (wordBreaks) {\n    var newlineCharUnion = escapedNewlineChars.join(&apos;|&apos;);\n    var escapedRules = [&apos;$&apos;];\n    for (var idx = 0, len = wordBreaks.length; idx &lt; len; idx++) {\n        var wordBreak = wordBreaks[idx];\n        if (isNewlineChar(wordBreak)) {\n            throw new TypeError(\&quot;`wordBreak` must not include \&quot; + newlineCharUnion);\n        }\n        escapedRules.push(wordBreak === &apos;&apos; ? &apos;.&apos; : escapeRegExp(wordBreak));\n    }\n    var breakRules = escapedRules.join(&apos;|&apos;);\n    return new RegExp(\&quot;(\&quot; + newlineCharUnion + \&quot;)|((.*?)(\&quot; + breakRules + \&quot;))\&quot;, &apos;gm&apos;);\n};\nexport var breakTextIntoLines = function (text, wordBreaks, maxWidth, computeWidthOfText) {\n    var regex = buildWordBreakRegex(wordBreaks);\n    var words = cleanText(text).match(regex);\n    var currLine = &apos;&apos;;\n    var currWidth = 0;\n    var lines = [];\n    var pushCurrLine = function () {\n        if (currLine !== &apos;&apos;)\n            lines.push(currLine);\n        currLine = &apos;&apos;;\n        currWidth = 0;\n    };\n    for (var idx = 0, len = words.length; idx &lt; len; idx++) {\n        var word = words[idx];\n        if (isNewlineChar(word)) {\n            pushCurrLine();\n        }\n        else {\n            var width = computeWidthOfText(word);\n            if (currWidth + width &gt; maxWidth)\n                pushCurrLine();\n            currLine += word;\n            currWidth += width;\n        }\n    }\n    pushCurrLine();\n    return lines;\n};\n// See section \&quot;7.9.4 Dates\&quot; of the PDF specification\nvar dateRegex = /^D:(\\d\\d\\d\\d)(\\d\\d)?(\\d\\d)?(\\d\\d)?(\\d\\d)?(\\d\\d)?([+\\-Z])?(\\d\\d)?&apos;?(\\d\\d)?&apos;?$/;\nexport var parseDate = function (dateStr) {\n    var match = dateStr.match(dateRegex);\n    if (!match)\n        return undefined;\n    var year = match[1], _a = match[2], month = _a === void 0 ? &apos;01&apos; : _a, _b = match[3], day = _b === void 0 ? &apos;01&apos; : _b, _c = match[4], hours = _c === void 0 ? &apos;00&apos; : _c, _d = match[5], mins = _d === void 0 ? &apos;00&apos; : _d, _e = match[6], secs = _e === void 0 ? &apos;00&apos; : _e, _f = match[7], offsetSign = _f === void 0 ? &apos;Z&apos; : _f, _g = match[8], offsetHours = _g === void 0 ? &apos;00&apos; : _g, _h = match[9], offsetMins = _h === void 0 ? &apos;00&apos; : _h;\n    // http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15\n    var tzOffset = offsetSign === &apos;Z&apos; ? &apos;Z&apos; : \&quot;\&quot; + offsetSign + offsetHours + \&quot;:\&quot; + offsetMins;\n    var date = new Date(year + \&quot;-\&quot; + month + \&quot;-\&quot; + day + \&quot;T\&quot; + hours + \&quot;:\&quot; + mins + \&quot;:\&quot; + secs + tzOffset);\n    return date;\n};\nexport var findLastMatch = function (value, regex) {\n    var _a;\n    var position = 0;\n    var lastMatch;\n    while (position &lt; value.length) {\n        var match = value.substring(position).match(regex);\n        if (!match)\n            return { match: lastMatch, pos: position };\n        lastMatch = match;\n        position += ((_a = match.index) !== null &amp;&amp; _a !== void 0 ? _a : 0) + match[0].length;\n    }\n    return { match: lastMatch, pos: position };\n};\n//# sourceMappingURL=strings.js.map&quot;,&quot;import { decodeFromBase64DataUri } from \&quot;./base64\&quot;;\nimport { charFromCode } from \&quot;./strings\&quot;;\nexport var last = function (array) { return array[array.length - 1]; };\n// export const dropLast = &lt;T&gt;(array: T[]): T[] =&gt;\n// array.slice(0, array.length - 1);\nexport var typedArrayFor = function (value) {\n    if (value instanceof Uint8Array)\n        return value;\n    var length = value.length;\n    var typedArray = new Uint8Array(length);\n    for (var idx = 0; idx &lt; length; idx++) {\n        typedArray[idx] = value.charCodeAt(idx);\n    }\n    return typedArray;\n};\nexport var mergeIntoTypedArray = function () {\n    var arrays = [];\n    for (var _i = 0; _i &lt; arguments.length; _i++) {\n        arrays[_i] = arguments[_i];\n    }\n    var arrayCount = arrays.length;\n    var typedArrays = [];\n    for (var idx = 0; idx &lt; arrayCount; idx++) {\n        var element = arrays[idx];\n        typedArrays[idx] =\n            element instanceof Uint8Array ? element : typedArrayFor(element);\n    }\n    var totalSize = 0;\n    for (var idx = 0; idx &lt; arrayCount; idx++) {\n        totalSize += arrays[idx].length;\n    }\n    var merged = new Uint8Array(totalSize);\n    var offset = 0;\n    for (var arrIdx = 0; arrIdx &lt; arrayCount; arrIdx++) {\n        var arr = typedArrays[arrIdx];\n        for (var byteIdx = 0, arrLen = arr.length; byteIdx &lt; arrLen; byteIdx++) {\n            merged[offset++] = arr[byteIdx];\n        }\n    }\n    return merged;\n};\nexport var mergeUint8Arrays = function (arrays) {\n    var totalSize = 0;\n    for (var idx = 0, len = arrays.length; idx &lt; len; idx++) {\n        totalSize += arrays[idx].length;\n    }\n    var mergedBuffer = new Uint8Array(totalSize);\n    var offset = 0;\n    for (var idx = 0, len = arrays.length; idx &lt; len; idx++) {\n        var array = arrays[idx];\n        mergedBuffer.set(array, offset);\n        offset += array.length;\n    }\n    return mergedBuffer;\n};\nexport var arrayAsString = function (array) {\n    var str = &apos;&apos;;\n    for (var idx = 0, len = array.length; idx &lt; len; idx++) {\n        str += charFromCode(array[idx]);\n    }\n    return str;\n};\nexport var byAscendingId = function (a, b) { return a.id - b.id; };\nexport var sortedUniq = function (array, indexer) {\n    var uniq = [];\n    for (var idx = 0, len = array.length; idx &lt; len; idx++) {\n        var curr = array[idx];\n        var prev = array[idx - 1];\n        if (idx === 0 || indexer(curr) !== indexer(prev)) {\n            uniq.push(curr);\n        }\n    }\n    return uniq;\n};\n// Arrays and TypedArrays in JS both have .reverse() methods, which would seem\n// to negate the need for this function. However, not all runtimes support this\n// method (e.g. React Native). This function compensates for that fact.\nexport var reverseArray = function (array) {\n    var arrayLen = array.length;\n    for (var idx = 0, len = Math.floor(arrayLen / 2); idx &lt; len; idx++) {\n        var leftIdx = idx;\n        var rightIdx = arrayLen - idx - 1;\n        var temp = array[idx];\n        array[leftIdx] = array[rightIdx];\n        array[rightIdx] = temp;\n    }\n    return array;\n};\nexport var sum = function (array) {\n    var total = 0;\n    for (var idx = 0, len = array.length; idx &lt; len; idx++) {\n        total += array[idx];\n    }\n    return total;\n};\nexport var range = function (start, end) {\n    var arr = new Array(end - start);\n    for (var idx = 0, len = arr.length; idx &lt; len; idx++) {\n        arr[idx] = start + idx;\n    }\n    return arr;\n};\nexport var pluckIndices = function (arr, indices) {\n    var plucked = new Array(indices.length);\n    for (var idx = 0, len = indices.length; idx &lt; len; idx++) {\n        plucked[idx] = arr[indices[idx]];\n    }\n    return plucked;\n};\nexport var canBeConvertedToUint8Array = function (input) {\n    return input instanceof Uint8Array ||\n        input instanceof ArrayBuffer ||\n        typeof input === &apos;string&apos;;\n};\nexport var toUint8Array = function (input) {\n    if (typeof input === &apos;string&apos;) {\n        return decodeFromBase64DataUri(input);\n    }\n    else if (input instanceof ArrayBuffer) {\n        return new Uint8Array(input);\n    }\n    else if (input instanceof Uint8Array) {\n        return input;\n    }\n    else {\n        throw new TypeError(&apos;`input` must be one of `string | ArrayBuffer | Uint8Array`&apos;);\n    }\n};\n//# sourceMappingURL=arrays.js.map&quot;,&quot;/**\n * Returns a Promise that resolves after at least one tick of the\n * Macro Task Queue occurs.\n */\nexport var waitForTick = function () {\n    return new Promise(function (resolve) {\n        setTimeout(function () { return resolve(); }, 0);\n    });\n};\n//# sourceMappingURL=async.js.map&quot;,&quot;import { toHexString } from \&quot;./strings\&quot;;\n/**\n * Encodes a string to UTF-8.\n *\n * @param input The string to be encoded.\n * @param byteOrderMark Whether or not a byte order marker (BOM) should be added\n *                      to the start of the encoding. (default `true`)\n * @returns A Uint8Array containing the UTF-8 encoding of the input string.\n *\n * -----------------------------------------------------------------------------\n *\n * JavaScript strings are composed of Unicode code points. Code points are\n * integers in the range 0 to 1,114,111 (0x10FFFF). When serializing a string,\n * it must be encoded as a sequence of words. A word is typically 8, 16, or 32\n * bytes in size. As such, Unicode defines three encoding forms: UTF-8, UTF-16,\n * and UTF-32. These encoding forms are described in the Unicode standard [1].\n * This function implements the UTF-8 encoding form.\n *\n * -----------------------------------------------------------------------------\n *\n * In UTF-8, each code point is mapped to a sequence of 1, 2, 3, or 4 bytes.\n * Note that the logic which defines this mapping is slightly convoluted, and\n * not as straightforward as the mapping logic for UTF-16 or UTF-32. The UTF-8\n * mapping logic is as follows [2]:\n *\n * • If a code point is in the range U+0000..U+007F, then view it as a 7-bit\n *   integer: 0bxxxxxxx. Map the code point to 1 byte with the first high order\n *   bit set to 0:\n *\n *       b1=0b0xxxxxxx\n *\n * • If a code point is in the range U+0080..U+07FF, then view it as an 11-bit\n *   integer: 0byyyyyxxxxxx. Map the code point to 2 bytes with the first 5 bits\n *   of the code point stored in the first byte, and the last 6 bits stored in\n *   the second byte:\n *\n *       b1=0b110yyyyy    b2=0b10xxxxxx\n *\n * • If a code point is in the range U+0800..U+FFFF, then view it as a 16-bit\n *   integer, 0bzzzzyyyyyyxxxxxx. Map the code point to 3 bytes with the first\n *   4 bits stored in the first byte, the next 6 bits stored in the second byte,\n *   and the last 6 bits in the third byte:\n *\n *       b1=0b1110zzzz    b2=0b10yyyyyy    b3=0b10xxxxxx\n *\n * • If a code point is in the range U+10000...U+10FFFF, then view it as a\n *   21-bit integer, 0bvvvzzzzzzyyyyyyxxxxxx. Map the code point to 4 bytes with\n *   the first 3 bits stored in the first byte, the next 6 bits stored in the\n *   second byte, the next 6 bits stored in the third byte, and the last 6 bits\n *   stored in the fourth byte:\n *\n *       b1=0b11110xxx    b2=0b10zzzzzz    b3=0b10yyyyyy    b4=0b10xxxxxx\n *\n * -----------------------------------------------------------------------------\n *\n * It is important to note, when iterating through the code points of a string\n * in JavaScript, that if a character is encoded as a surrogate pair it will\n * increase the string&apos;s length by 2 instead of 1 [4]. For example:\n *\n * ```\n * &gt; &apos;a&apos;.length\n * 1\n * &gt; &apos;💩&apos;.length\n * 2\n * &gt; &apos;語&apos;.length\n * 1\n * &gt; &apos;a💩語&apos;.length\n * 4\n * ```\n *\n * The results of the above example are explained by the fact that the\n * characters &apos;a&apos; and &apos;語&apos; are not represented by surrogate pairs, but &apos;💩&apos; is.\n *\n * Because of this idiosyncrasy in JavaScript&apos;s string implementation and APIs,\n * we must \&quot;jump\&quot; an extra index after encoding a character as a surrogate\n * pair. In practice, this means we must increment the index of our for loop by\n * 2 if we encode a surrogate pair, and 1 in all other cases.\n *\n * -----------------------------------------------------------------------------\n *\n * References:\n *   - [1] https://www.unicode.org/versions/Unicode12.0.0/UnicodeStandard-12.0.pdf\n *         3.9  Unicode Encoding Forms - UTF-8\n *   - [2] http://www.herongyang.com/Unicode/UTF-8-UTF-8-Encoding.html\n *   - [3] http://www.herongyang.com/Unicode/UTF-8-UTF-8-Encoding-Algorithm.html\n *   - [4] https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length#Description\n *\n */\nexport var utf8Encode = function (input, byteOrderMark) {\n    if (byteOrderMark === void 0) { byteOrderMark = true; }\n    var encoded = [];\n    if (byteOrderMark)\n        encoded.push(0xef, 0xbb, 0xbf);\n    for (var idx = 0, len = input.length; idx &lt; len;) {\n        var codePoint = input.codePointAt(idx);\n        // One byte encoding\n        if (codePoint &lt; 0x80) {\n            var byte1 = codePoint &amp; 0x7f;\n            encoded.push(byte1);\n            idx += 1;\n        }\n        // Two byte encoding\n        else if (codePoint &lt; 0x0800) {\n            var byte1 = ((codePoint &gt;&gt; 6) &amp; 0x1f) | 0xc0;\n            var byte2 = (codePoint &amp; 0x3f) | 0x80;\n            encoded.push(byte1, byte2);\n            idx += 1;\n        }\n        // Three byte encoding\n        else if (codePoint &lt; 0x010000) {\n            var byte1 = ((codePoint &gt;&gt; 12) &amp; 0x0f) | 0xe0;\n            var byte2 = ((codePoint &gt;&gt; 6) &amp; 0x3f) | 0x80;\n            var byte3 = (codePoint &amp; 0x3f) | 0x80;\n            encoded.push(byte1, byte2, byte3);\n            idx += 1;\n        }\n        // Four byte encoding (surrogate pair)\n        else if (codePoint &lt; 0x110000) {\n            var byte1 = ((codePoint &gt;&gt; 18) &amp; 0x07) | 0xf0;\n            var byte2 = ((codePoint &gt;&gt; 12) &amp; 0x3f) | 0x80;\n            var byte3 = ((codePoint &gt;&gt; 6) &amp; 0x3f) | 0x80;\n            var byte4 = ((codePoint &gt;&gt; 0) &amp; 0x3f) | 0x80;\n            encoded.push(byte1, byte2, byte3, byte4);\n            idx += 2;\n        }\n        // Should never reach this case\n        else\n            throw new Error(\&quot;Invalid code point: 0x\&quot; + toHexString(codePoint));\n    }\n    return new Uint8Array(encoded);\n};\n/**\n * Encodes a string to UTF-16.\n *\n * @param input The string to be encoded.\n * @param byteOrderMark Whether or not a byte order marker (BOM) should be added\n *                      to the start of the encoding. (default `true`)\n * @returns A Uint16Array containing the UTF-16 encoding of the input string.\n *\n * -----------------------------------------------------------------------------\n *\n * JavaScript strings are composed of Unicode code points. Code points are\n * integers in the range 0 to 1,114,111 (0x10FFFF). When serializing a string,\n * it must be encoded as a sequence of words. A word is typically 8, 16, or 32\n * bytes in size. As such, Unicode defines three encoding forms: UTF-8, UTF-16,\n * and UTF-32. These encoding forms are described in the Unicode standard [1].\n * This function implements the UTF-16 encoding form.\n *\n * -----------------------------------------------------------------------------\n *\n * In UTF-16, each code point is mapped to one or two 16-bit integers. The\n * UTF-16 mapping logic is as follows [2]:\n *\n * • If a code point is in the range U+0000..U+FFFF, then map the code point to\n *   a 16-bit integer with the most significant byte first.\n *\n * • If a code point is in the range U+10000..U+10000, then map the code point\n *   to two 16-bit integers. The first integer should contain the high surrogate\n *   and the second integer should contain the low surrogate. Both surrogates\n *   should be written with the most significant byte first.\n *\n * -----------------------------------------------------------------------------\n *\n * It is important to note, when iterating through the code points of a string\n * in JavaScript, that if a character is encoded as a surrogate pair it will\n * increase the string&apos;s length by 2 instead of 1 [4]. For example:\n *\n * ```\n * &gt; &apos;a&apos;.length\n * 1\n * &gt; &apos;💩&apos;.length\n * 2\n * &gt; &apos;語&apos;.length\n * 1\n * &gt; &apos;a💩語&apos;.length\n * 4\n * ```\n *\n * The results of the above example are explained by the fact that the\n * characters &apos;a&apos; and &apos;語&apos; are not represented by surrogate pairs, but &apos;💩&apos; is.\n *\n * Because of this idiosyncrasy in JavaScript&apos;s string implementation and APIs,\n * we must \&quot;jump\&quot; an extra index after encoding a character as a surrogate\n * pair. In practice, this means we must increment the index of our for loop by\n * 2 if we encode a surrogate pair, and 1 in all other cases.\n *\n * -----------------------------------------------------------------------------\n *\n * References:\n *   - [1] https://www.unicode.org/versions/Unicode12.0.0/UnicodeStandard-12.0.pdf\n *         3.9  Unicode Encoding Forms - UTF-8\n *   - [2] http://www.herongyang.com/Unicode/UTF-16-UTF-16-Encoding.html\n *   - [3] https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length#Description\n *\n */\nexport var utf16Encode = function (input, byteOrderMark) {\n    if (byteOrderMark === void 0) { byteOrderMark = true; }\n    var encoded = [];\n    if (byteOrderMark)\n        encoded.push(0xfeff);\n    for (var idx = 0, len = input.length; idx &lt; len;) {\n        var codePoint = input.codePointAt(idx);\n        // Two byte encoding\n        if (codePoint &lt; 0x010000) {\n            encoded.push(codePoint);\n            idx += 1;\n        }\n        // Four byte encoding (surrogate pair)\n        else if (codePoint &lt; 0x110000) {\n            encoded.push(highSurrogate(codePoint), lowSurrogate(codePoint));\n            idx += 2;\n        }\n        // Should never reach this case\n        else\n            throw new Error(\&quot;Invalid code point: 0x\&quot; + toHexString(codePoint));\n    }\n    return new Uint16Array(encoded);\n};\n/**\n * Returns `true` if the `codePoint` is within the\n * Basic Multilingual Plane (BMP). Code points inside the BMP are not encoded\n * with surrogate pairs.\n * @param codePoint The code point to be evaluated.\n *\n * Reference: https://en.wikipedia.org/wiki/UTF-16#Description\n */\nexport var isWithinBMP = function (codePoint) {\n    return codePoint &gt;= 0 &amp;&amp; codePoint &lt;= 0xffff;\n};\n/**\n * Returns `true` if the given `codePoint` is valid and must be represented\n * with a surrogate pair when encoded.\n * @param codePoint The code point to be evaluated.\n *\n * Reference: https://en.wikipedia.org/wiki/UTF-16#Description\n */\nexport var hasSurrogates = function (codePoint) {\n    return codePoint &gt;= 0x010000 &amp;&amp; codePoint &lt;= 0x10ffff;\n};\n// From Unicode 3.0 spec, section 3.7:\n//   http://unicode.org/versions/Unicode3.0.0/ch03.pdf\nexport var highSurrogate = function (codePoint) {\n    return Math.floor((codePoint - 0x10000) / 0x400) + 0xd800;\n};\n// From Unicode 3.0 spec, section 3.7:\n//   http://unicode.org/versions/Unicode3.0.0/ch03.pdf\nexport var lowSurrogate = function (codePoint) {\n    return ((codePoint - 0x10000) % 0x400) + 0xdc00;\n};\nvar ByteOrder;\n(function (ByteOrder) {\n    ByteOrder[\&quot;BigEndian\&quot;] = \&quot;BigEndian\&quot;;\n    ByteOrder[\&quot;LittleEndian\&quot;] = \&quot;LittleEndian\&quot;;\n})(ByteOrder || (ByteOrder = {}));\nvar REPLACEMENT = &apos;�&apos;.codePointAt(0);\n/**\n * Decodes a Uint8Array of data to a string using UTF-16.\n *\n * Note that this function attempts to recover from erronous input by\n * inserting the replacement character (�) to mark invalid code points\n * and surrogate pairs.\n *\n * @param input A Uint8Array containing UTF-16 encoded data\n * @param byteOrderMark Whether or not a byte order marker (BOM) should be read\n *                      at the start of the encoding. (default `true`)\n * @returns The decoded string.\n */\nexport var utf16Decode = function (input, byteOrderMark) {\n    if (byteOrderMark === void 0) { byteOrderMark = true; }\n    // Need at least 2 bytes of data in UTF-16 encodings\n    if (input.length &lt;= 1)\n        return String.fromCodePoint(REPLACEMENT);\n    var byteOrder = byteOrderMark ? readBOM(input) : ByteOrder.BigEndian;\n    // Skip byte order mark if needed\n    var idx = byteOrderMark ? 2 : 0;\n    var codePoints = [];\n    while (input.length - idx &gt;= 2) {\n        var first = decodeValues(input[idx++], input[idx++], byteOrder);\n        if (isHighSurrogate(first)) {\n            if (input.length - idx &lt; 2) {\n                // Need at least 2 bytes left for the low surrogate that is required\n                codePoints.push(REPLACEMENT);\n            }\n            else {\n                var second = decodeValues(input[idx++], input[idx++], byteOrder);\n                if (isLowSurrogate(second)) {\n                    codePoints.push(first, second);\n                }\n                else {\n                    // Low surrogates should always follow high surrogates\n                    codePoints.push(REPLACEMENT);\n                }\n            }\n        }\n        else if (isLowSurrogate(first)) {\n            // High surrogates should always come first since `decodeValues()`\n            // accounts for the byte ordering\n            idx += 2;\n            codePoints.push(REPLACEMENT);\n        }\n        else {\n            codePoints.push(first);\n        }\n    }\n    // There shouldn&apos;t be extra byte(s) left over\n    if (idx &lt; input.length)\n        codePoints.push(REPLACEMENT);\n    return String.fromCodePoint.apply(String, codePoints);\n};\n/**\n * Returns `true` if the given `codePoint` is a high surrogate.\n * @param codePoint The code point to be evaluated.\n *\n * Reference: https://en.wikipedia.org/wiki/UTF-16#Description\n */\nvar isHighSurrogate = function (codePoint) {\n    return codePoint &gt;= 0xd800 &amp;&amp; codePoint &lt;= 0xdbff;\n};\n/**\n * Returns `true` if the given `codePoint` is a low surrogate.\n * @param codePoint The code point to be evaluated.\n *\n * Reference: https://en.wikipedia.org/wiki/UTF-16#Description\n */\nvar isLowSurrogate = function (codePoint) {\n    return codePoint &gt;= 0xdc00 &amp;&amp; codePoint &lt;= 0xdfff;\n};\n/**\n * Decodes the given utf-16 values first and second using the specified\n * byte order.\n * @param first The first byte of the encoding.\n * @param second The second byte of the encoding.\n * @param byteOrder The byte order of the encoding.\n * Reference: https://en.wikipedia.org/wiki/UTF-16#Examples\n */\nvar decodeValues = function (first, second, byteOrder) {\n    // Append the binary representation of the preceding byte by shifting the\n    // first one 8 to the left and than applying a bitwise or-operator to append\n    // the second one.\n    if (byteOrder === ByteOrder.LittleEndian)\n        return (second &lt;&lt; 8) | first;\n    if (byteOrder === ByteOrder.BigEndian)\n        return (first &lt;&lt; 8) | second;\n    throw new Error(\&quot;Invalid byteOrder: \&quot; + byteOrder);\n};\n/**\n * Returns whether the given array contains a byte order mark for the\n * UTF-16BE or UTF-16LE encoding. If it has neither, BigEndian is assumed.\n *\n * Reference: https://en.wikipedia.org/wiki/Byte_order_mark#UTF-16\n *\n * @param bytes The byte array to be evaluated.\n */\n// prettier-ignore\nvar readBOM = function (bytes) { return (hasUtf16BigEndianBOM(bytes) ? ByteOrder.BigEndian\n    : hasUtf16LittleEndianBOM(bytes) ? ByteOrder.LittleEndian\n        : ByteOrder.BigEndian); };\nvar hasUtf16BigEndianBOM = function (bytes) {\n    return bytes[0] === 0xfe &amp;&amp; bytes[1] === 0xff;\n};\nvar hasUtf16LittleEndianBOM = function (bytes) {\n    return bytes[0] === 0xff &amp;&amp; bytes[1] === 0xfe;\n};\nexport var hasUtf16BOM = function (bytes) {\n    return hasUtf16BigEndianBOM(bytes) || hasUtf16LittleEndianBOM(bytes);\n};\n//# sourceMappingURL=unicode.js.map&quot;,&quot;// tslint:disable radix\n/**\n * Converts a number to its string representation in decimal. This function\n * differs from simply converting a number to a string with `.toString()`\n * because this function&apos;s output string will **not** contain exponential\n * notation.\n *\n * Credit: https://stackoverflow.com/a/46545519\n */\nexport var numberToString = function (num) {\n    var numStr = String(num);\n    if (Math.abs(num) &lt; 1.0) {\n        var e = parseInt(num.toString().split(&apos;e-&apos;)[1]);\n        if (e) {\n            var negative = num &lt; 0;\n            if (negative)\n                num *= -1;\n            num *= Math.pow(10, e - 1);\n            numStr = &apos;0.&apos; + new Array(e).join(&apos;0&apos;) + num.toString().substring(2);\n            if (negative)\n                numStr = &apos;-&apos; + numStr;\n        }\n    }\n    else {\n        var e = parseInt(num.toString().split(&apos;+&apos;)[1]);\n        if (e &gt; 20) {\n            e -= 20;\n            num /= Math.pow(10, e);\n            numStr = num.toString() + new Array(e + 1).join(&apos;0&apos;);\n        }\n    }\n    return numStr;\n};\nexport var sizeInBytes = function (n) { return Math.ceil(n.toString(2).length / 8); };\n/**\n * Converts a number into its constituent bytes and returns them as\n * a number[].\n *\n * Returns most significant byte as first element in array. It may be necessary\n * to call .reverse() to get the bits in the desired order.\n *\n * Example:\n *   bytesFor(0x02A41E) =&gt; [ 0b10, 0b10100100, 0b11110 ]\n *\n * Credit for algorithm: https://stackoverflow.com/a/1936865\n */\nexport var bytesFor = function (n) {\n    var bytes = new Uint8Array(sizeInBytes(n));\n    for (var i = 1; i &lt;= bytes.length; i++) {\n        bytes[i - 1] = n &gt;&gt; ((bytes.length - i) * 8);\n    }\n    return bytes;\n};\n//# sourceMappingURL=numbers.js.map&quot;,&quot;export var error = function (msg) {\n    throw new Error(msg);\n};\n//# sourceMappingURL=errors.js.map&quot;,&quot;&apos;use strict&apos;;\n\n\nvar TYPED_OK =  (typeof Uint8Array !== &apos;undefined&apos;) &amp;&amp;\n                (typeof Uint16Array !== &apos;undefined&apos;) &amp;&amp;\n                (typeof Int32Array !== &apos;undefined&apos;);\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== &apos;object&apos;) {\n      throw new TypeError(source + &apos;must be non-object&apos;);\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }</div></div></div></main></body></html>